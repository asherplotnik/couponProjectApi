{"version":3,"sources":["Components/LayoutArea/Header/Header.tsx","Components/LayoutArea/Footer/Footer.tsx","Redux/SessionState.ts","Services/Globals.ts","Components/UI/Spinner/Spinner.tsx","Redux/Store.ts","Components/MainArea/Login/Login.tsx","Components/UI/CompanyTable.tsx","Models/CompanyModel.ts","Components/MainArea/AdminArea/AddCompany/AddCompany.tsx","Components/UI/CustomerTable.tsx","Models/CustomerModel.ts","Components/MainArea/AdminArea/AddCustomer/AddCustomer.tsx","Components/MainArea/AdminArea/DeleteCompany/DeleteCompany.tsx","Components/MainArea/AdminArea/DeleteCustomer/DeleteCustomer.tsx","Models/ErrorModel.ts","Components/MainArea/AdminArea/UpdateCompany/UpdateCompany.tsx","Components/MainArea/AdminArea/UpdateCustomer/UpdateCustomer.tsx","Components/MainArea/AdminArea/GetAllCompanies/GetAllCompanies.tsx","Components/MainArea/AdminArea/GetAllCustomers/GetAllCustomers.tsx","Components/UI/CouponsTable.tsx","Components/MainArea/AdminArea/GetCompany/GetCompany.tsx","Components/MainArea/AdminArea/GetCustomer/GetCustomer.tsx","Components/MainArea/AdminArea/Admin/Admin.tsx","Components/UI/CouponCard/CouponCard.tsx","Components/MainArea/CompanyArea/AddCoupon/AddCoupon.tsx","Components/MainArea/CompanyArea/DeleteCoupon/DeleteCoupon.tsx","Components/MainArea/CompanyArea/UpdateCoupon/UpdateCoupon.tsx","Components/MainArea/CompanyArea/GetCompanyCouponsByCategoryId/GetCompanyCouponsByCategory.tsx","Components/MainArea/CompanyArea/GetCompanyCoupons/GetCompanyCoupons.tsx","Components/MainArea/CompanyArea/GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice.tsx","Components/MainArea/CompanyArea/GetCompanyDetails/GetCompanyDetails.tsx","Components/MainArea/CompanyArea/GetCompanyCoupon/GetCompanyCoupon.tsx","Components/MainArea/CompanyArea/Company/Company.tsx","Components/UI/Modal/Backdrop.tsx","Components/UI/Modal/Modal.tsx","Components/MainArea/CustomerArea/PurchaseCoupon/PurchaseCoupon.tsx","Components/MainArea/CustomerArea/GetCustomerCoupons/GetCustomerCoupons.tsx","Components/MainArea/CustomerArea/GetCustomerCouponsByCategory/GetCustomerCouponsByCategory.tsx","Components/MainArea/CustomerArea/GetCustomerCouponsByMaxPrice/GetCustomerCouponsByMaxPrice.tsx","Components/MainArea/CustomerArea/GetCustomerDetails/GetCustomerDetails.tsx","Components/MainArea/CustomerArea/GetCustomerCoupon/GetCustomerCoupon.tsx","Components/MainArea/CustomerArea/Cusotmer/Customer.tsx","Components/MainArea/Unauthorized/Unauthorized.tsx","Components/LayoutArea/Layout.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","Footer","SessionActionType","Globals","globals","urls","products","couponImages","localUrl","spinner","SessionState","session","token","userType","setSessionAction","type","SetSession","payload","reducers","combineReducers","currentState","action","newState","store","createStore","Login","useState","loading","setLoading","userTypeState","setUserTypeState","history","useHistory","fetchLogin","e","a","preventDefault","formData","FormData","document","querySelector","password","get","email","parseInt","axios","post","then","response","dispatch","data","catch","error","console","log","alert","loginView","Form","id","onSubmit","Group","Label","Control","name","required","placeholder","as","size","value","Button","push","CompanyTable","props","err","message","fetchedCompany","title","Table","CompanyModel","coupons","AddCompany","setFetchedCompany","setErr","company","headers","CustomerTable","fetchedCustomer","first_name","last_name","CustomerModel","AddCustomer","fetchedData","setFetchedData","customer","DeleteCompany","fetchCompanies","useEffect","delete","map","opt","DeleteCustomerForm","setFetchedCustomer","fetchCustomers","ErrorModel","UpdateCompany","fetchedUpdate","setFetchedUpdate","onChange","companyId","defaultValue","disabled","UpdateCustomer","customerId","GetAllCompanies","st","setSt","index","GetAllCustomers","CouponsTable","rowHovered","setRowHovered","cat","handleHover","row","fetchedCoupons","coupon","onMouseEnter","onMouseLeave","onClick","selectRow","categoryId","description","startDate","endDate","amount","price","src","image","alt","showTitleWhenEmpty","GetCompany","setFetchedCoupons","found","GetCustomer","Admin","subForm","subFormState","setSubFormState","getState","setToken","event","target","CouponCard","AddCoupon","append","min","max","DeleteCoupon","fetchedCoupon","setFetchedCoupon","fetchCoupons","UpdateCoupon","toString","couponId","getElementById","reset","GetCompanyCouponsByCategoryId","GetCompanyCoupons","GetCompanyCouponsByMaxPrice","mPrice","parseFloat","GetCompanyDetails","cm","setCm","GetCompanyCoupon","Company","GetCompanyCouponsByCategory","replace","Backdrop","show","clicked","Modal","nextProps","this","Fragment","modalClosed","style","width","left","transform","opacity","children","Component","PurchaseCoupon","resState","setResState","cp","setCp","showModal","setShowModal","selectId","setSelectedId","Object","keys","length","changeShowModal","filter","el","variant","GetCustomerCoupons","GetCustomerCouponsByCategory","GetCustomerCouponsByMaxPrice","GetCustomerDetails","GetCustomerCoupon","Customer","Unauthorized","Layout","unsubscribeMe","state","user","subscribe","setState","path","component","exact","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fc068c97.chunk.js","sourcesContent":["import \"./Header.css\";\r\n\r\nfunction Header(): JSX.Element {\r\n  return (\r\n    <div className=\"Header\">\r\n      <h3>COUPON PROJECT</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer(): JSX.Element {\r\n    return (\r\n        <div className=\"Footer\">\r\n\t\t\t<p>All rights reserved to Asher Plotnik ©</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","\r\n// Handling Products AppState\r\n\r\nimport SessionModel from \"../Models/SessionModel\";\r\n\r\n// Products AppState - המידע ברמת האפליקציה הקשור למוצרים - אלו בעצם כל המוצרים:\r\nexport class SessionState {\r\n    public session: SessionModel = {token:\"\",userType:-1} ; // We're going to create initial object\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Action Types - אלו פעולות ניתן לבצע על המידע ברמת האפליקציה:\r\nexport enum SessionActionType {\r\n    SetSession=\"SetSession\",\r\n // RemoveSession=\"RemoveSession\", \r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Product Action - אובייקט המכיל את המידע עבור הפעולה שאנו מבצעים על המידע ברמת הפליקציה\r\nexport interface SessionAction {\r\n    type: SessionActionType;\r\n    payload: any; // payload?: any; if the payload can be empty.\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Action Creators - מתאים עבור כל פעולה Action ומחזירות אובייקט payload-פונקציות המקבלות את ה\r\n\r\nexport function setSessionAction(session: SessionModel): SessionAction {\r\n    return { type: SessionActionType.SetSession, payload: session };\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Reducer - פונקציה המבצעת את הפעולה בפועל\r\nexport function SessionReducer(currentState: SessionState = new SessionState(), action: SessionAction): SessionState {\r\n    \r\n    const newState = {...currentState}; // Spread Operator - שכפול אובייקט\r\n\r\n    switch(action.type) {\r\n        case SessionActionType.SetSession:\r\n            newState.session.token = action.payload.token; \r\n            newState.session.userType = action.payload.userType; \r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n","// Global settings which are the same for development and production: \r\nclass Globals {\r\n}\r\n\r\n// Global settings which are suitable only for development:\r\nclass DevelopmentGlobals extends Globals {\r\n    public urls = {\r\n        products: \"http://localhost:8080/api/products/\",\r\n        couponImages: \"http://localhost:8080/images/\",\r\n        localUrl : \"http://localhost\"\r\n    };\r\n}\r\n\r\n// Global settings which are suitable only for production:\r\nclass ProductionGlobals extends Globals {\r\n    public urls = {\r\n        products: \"http://localhost:3030/api/products/\", // In real life there will be the production address\r\n        couponImages:\"http://localhost:8080/images/\",\r\n        localUrl : \"http://localhost\"\r\n    };\r\n}\r\n\r\n// Creating the correct object\r\nconst globals = process.env.NODE_ENV === \"development\" ? new DevelopmentGlobals() : new ProductionGlobals();\r\n\r\nexport default globals;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\nconst spinner = () => <div className=\"SpinnerLoader\">Loading...</div>;\r\n\r\nexport default spinner;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { SessionReducer } from \"./SessionState\";\r\n\r\n\r\n// Single Reducer: \r\n// const store = createStore(productsReducer);\r\n\r\n// For getting ProductsState: \r\n// store.getState().products\r\n\r\n// ----------------------------------------------------------\r\n\r\n// Multiple Reducers: \r\nconst reducers = combineReducers({ SessionState: SessionReducer /*, employeesState: employeesReducer, customersState: customersReducer */});\r\nconst store = createStore(reducers);\r\n\r\n// For getting ProductsState: \r\n// store.getState().productsState.products\r\n// store.getState().employeesState.employees\r\n// store.getState().customersState.customers\r\n\r\n\r\n\r\nexport default store;\r\n","import \"./Login.css\";\r\nimport axios from \"axios\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport store from \"../../../Redux/Store\";\r\nimport { setSessionAction } from \"../../../Redux/SessionState\";\r\n\r\nfunction Login(): JSX.Element {\r\n  const [loading, setLoading] = useState(false);\r\n  const [userTypeState, setUserTypeState] = useState(-1);\r\n  const history = useHistory();\r\n\r\n  const fetchLogin = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#loginForm\") as HTMLFormElement\r\n    );\r\n    const password = formData.get(\"password\");\r\n    const email = formData.get(\"email\");\r\n    const userType = parseInt(formData.get(\"userType\") as string);\r\n    setLoading(true);\r\n    await axios\r\n      .post(globals.urls.localUrl + `:8080//login/${email}/${userType}`, {\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        //dispatch(actions.setSession({token: response.data as string,userType: userType,}));\r\n        setUserTypeState(userType);\r\n        store.dispatch(\r\n          setSessionAction({\r\n            token: response.data as string,\r\n            userType: userType,\r\n          })\r\n        );\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.log(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  let loginView = <Spinner />;\r\n  if (!loading) {\r\n    loginView = (\r\n      <div className=\"Login\">\r\n        <div className=\"wrapperDiv\">\r\n          <h3>LOGIN</h3>\r\n          <Form className=\"ulForm\" id=\"loginForm\" onSubmit={fetchLogin}>\r\n            <Form.Group>\r\n              <Form.Label>Email :</Form.Label>\r\n              <Form.Control\r\n                // type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                required\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password:</Form.Label>\r\n              <Form.Control\r\n                id=\"password\"\r\n                name=\"password\"\r\n                required\r\n                // type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>User type:</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                id=\"userType\"\r\n                name=\"userType\"\r\n                required\r\n                size=\"lg\"\r\n              >\r\n                <option value=\"0\">ADMIN</option>\r\n                <option value=\"1\">COMPANY</option>\r\n                <option value=\"2\">CUSTOMER</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button id=\"submitButton\" type=\"submit\">\r\n              SUBMIT\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  switch (userTypeState) {\r\n    case 0:\r\n      history.push(\"/admin\");\r\n      break;\r\n    case 1:\r\n      history.push(\"/company\");\r\n      break;\r\n    case 2:\r\n      history.push(\"/customer\");\r\n      break;\r\n    default:\r\n  }\r\n  return loginView;\r\n}\r\n\r\nexport default Login;\r\n","import \"./CompanyTable.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport CompanyModel from \"../../Models/CompanyModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\n\r\ninterface CtProps {\r\n  title: string;\r\n  data: CompanyModel;\r\n  err?: ErrorModel;\r\n}\r\n\r\nconst CompanyTable = (props: CtProps) => {\r\n  console.log(props.err && props.err.response.data.message);\r\n  let fetchedCompany = props.data;\r\n  if (fetchedCompany) {\r\n    return (\r\n      <div className=\"CompanyTable\">\r\n        <div className=\"h3Div\">\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Password</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>{fetchedCompany.id}</td>\r\n              <td>{fetchedCompany.name}</td>\r\n              <td>{fetchedCompany.email}</td>\r\n              <td>{fetchedCompany.password}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className=\"h3Div\">\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default CompanyTable;\r\n","import CouponModel from \"./CouponModel\";\r\n\r\nclass CompanyModel {\r\n    public id:number=0;\r\n    public name:string=\"\";\r\n    public email:string=\"\";\r\n    public password:string=\"\";\r\n    public coupons:CouponModel[];\r\n}\r\n\r\nexport default CompanyModel;","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./AddCompany.css\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface AcProps {\r\n  token: string;\r\n}\r\n\r\nfunction AddCompany(props: AcProps) {\r\n  const token = props.token;\r\n  let [fetchedCompany, setFetchedCompany] = useState<CompanyModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const addCompanyHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#addCompanyForm\"));\r\n    console.log(formData.get(\"username\"));\r\n    let company: CompanyModel = new CompanyModel();\r\n    company.id = 0;\r\n    company.name = formData.get(\"username\") as string;\r\n    company.email = formData.get(\"email\") as string;\r\n    company.password = formData.get(\"password\") as string;\r\n\r\n    axios\r\n      .post(globals.urls.localUrl + \":8080//api/admin/addCompany\", company, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCompany(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCompany\">\r\n      <h3 className=\"h3Div\">Add Company</h3>\r\n      <Form id=\"addCompanyForm\" onSubmit={addCompanyHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>Name: </Form.Label>\r\n            <Form.Control name=\"username\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control name=\"email\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control name=\"password\" />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CompanyTable\r\n        err={err}\r\n        data={fetchedCompany}\r\n        title=\"COMPANY ADDED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCompany;\r\n","import \"./CustomerTable.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CustomerModel from \"../../Models/CustomerModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\n\r\ninterface CtProps {\r\n  title: string;\r\n  data: CustomerModel;\r\n  err?: ErrorModel;\r\n}\r\n\r\nconst CustomerTable = (props: CtProps) => {\r\n  console.log(props.err && props.err.response.data.message);\r\n  let fetchedCustomer = props.data;\r\n  if (fetchedCustomer) {\r\n    return (\r\n      <div>\r\n        <div className=\"CustomerTable\">\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>ID</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Password</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>{fetchedCustomer.id}</td>\r\n              <td>{fetchedCustomer.first_name}</td>\r\n              <td>{fetchedCustomer.last_name}</td>\r\n              <td>{fetchedCustomer.email}</td>\r\n              <td>{fetchedCustomer.password}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className=\"CustomerTable\">\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default CustomerTable;\r\n","import CouponModel from \"./CouponModel\";\r\n\r\nclass CustomerModel {\r\n    public id:number;\r\n    public first_name:string;\r\n    public last_name:string;\r\n    public email:string;\r\n    public password:string;\r\n    public coupons:CouponModel[];\r\n\r\n}\r\n\r\nexport default CustomerModel;\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./AddCustomer.css\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface AcProps {\r\n  token: string;\r\n}\r\n\r\nfunction AddCustomer(props: AcProps) {\r\n  const token = props.token;\r\n  let [fetchedData, setFetchedData] = useState<CustomerModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const addCustomerHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#addCustomerForm\"));\r\n    let customer: CustomerModel = new CustomerModel();\r\n    customer.id = 0;\r\n    customer.last_name = formData.get(\"lastname\") as string;\r\n    customer.first_name = formData.get(\"firstname\") as string;\r\n    customer.email = formData.get(\"email\") as string;\r\n    customer.password = formData.get(\"password\") as string;\r\n    axios\r\n      .post(globals.urls.localUrl + \":8080//api/admin/addCustomer\", customer, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCustomer\">\r\n      <h3 className=\"h3Div\">Add Customer</h3>\r\n      <Form id=\"addCustomerForm\" onSubmit={addCustomerHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>First Name: </Form.Label>\r\n            <Form.Control name=\"firstname\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Name: </Form.Label>\r\n            <Form.Control name=\"lastname\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control name=\"email\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control name=\"password\" />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CustomerTable\r\n        err={err}\r\n        data={fetchedData}\r\n        title=\"CUSTOMER ADDED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCustomer;\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./DeleteCompany.css\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\n\r\ninterface DcProps {\r\n  token: string;\r\n}\r\n\r\nfunction DeleteCompany(props: DcProps) {\r\n  const token = props.token;\r\n  let [fetchedCompany, setFetchedCompany] = useState(null);\r\n  let [fetchedData, setFetchedData] = useState<CompanyModel[]>(null);\r\n  let [err, setErr] = useState(null);\r\n  const deleteCompanyHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#deleteCompanyForm\"));\r\n    const id = parseInt(formData.get(\"id\") as string);\r\n    setFetchedCompany(null);\r\n    axios\r\n      .delete(globals.urls.localUrl + \":8080//api/admin/deleteCompany/\" + id, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCompany(response.data);\r\n        fetchCompanies();\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchCompanies = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"DeleteCompany\">\r\n      <h3 className=\"h3Div\">Delete Company</h3>\r\n      <Form id=\"deleteCompanyForm\" onSubmit={deleteCompanyHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Control name=\"id\" as=\"select\" id=\"actionSelect\" size=\"lg\">\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CompanyModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID)\r\n                      {opt.id} Name: {opt.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n          <Button type=\"submit\">SUBMIT</Button>\r\n        </div>\r\n      </Form>\r\n      <CompanyTable\r\n        err={err}\r\n        data={fetchedCompany}\r\n        title=\"COMPANY DELETED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteCompany;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./DeleteCustomer.css\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface DcProps {\r\n  token: string;\r\n}\r\n\r\nfunction DeleteCustomerForm(props: DcProps) {\r\n  const token = props.token;\r\n  let [fetchedCustomer, setFetchedCustomer] = useState<CustomerModel>(null);\r\n  let [fetchedData, setFetchedData] = useState<CustomerModel[]>(null);\r\n  let [err, setErr] = useState(null);\r\n  const deleteCustomerHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#deleteCustomerForm\")\r\n    );\r\n    const id = parseInt(formData.get(\"id\") as string);\r\n    setFetchedCustomer(null);\r\n    axios\r\n      .delete(globals.urls.localUrl + \":8080//api/admin/deleteCustomer/\" + id, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCustomer(response.data);\r\n        fetchCustomers();\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  const fetchCustomers = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"DeleteCustomer\">\r\n      <h3 className=\"h3Div\">Delete customer</h3>\r\n      <Form id=\"deleteCustomerForm\" onSubmit={deleteCustomerHandler}>\r\n        <div className=\"FormColl\">\r\n          {/* <Form.Group>\r\n            <Form.Label>ID to delete: </Form.Label>\r\n            <Form.Control name=\"id\" /> <Button type=\"submit\">SUBMIT</Button>\r\n          </Form.Group> */}\r\n          <Form.Control name=\"id\" as=\"select\" id=\"actionSelect\" size=\"lg\">\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CustomerModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID) {opt.id}\r\n                      {\"\\u00A0\"} {\"\\u00A0\"}\r\n                      {\"\\u00A0\"} Name: {opt.first_name} {opt.last_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n          <Button type=\"submit\">SUBMIT</Button>\r\n        </div>\r\n      </Form>\r\n      <CustomerTable\r\n        err={err}\r\n        data={fetchedCustomer}\r\n        title=\"CUSTOMER DELETED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteCustomerForm;\r\n","class ErrorModel {\r\n    public response:{\r\n        data:{\r\n            message:string;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorModel;","import { SyntheticEvent, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./UpdateCompany.css\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface UcProps {\r\n  token: string;\r\n}\r\n\r\nfunction UpdateCompany(props: UcProps) {\r\n  const token = props.token;\r\n  const [fetchedCompany, setFetchedCompany] = useState<CompanyModel>(null);\r\n  const [fetchedUpdate, setFetchedUpdate] = useState<CompanyModel>(null);\r\n  const [fetchedData, setFetchedData] = useState<CompanyModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n\r\n  const updateCompanyHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (fetchedUpdate === null) {\r\n      return;\r\n    }\r\n    const formData = new FormData(document.querySelector(\"#updateCompanyForm\"));\r\n    let company: CompanyModel = new CompanyModel();\r\n    company.id = fetchedUpdate.id;\r\n    company.email = formData.get(\"email\") as string;\r\n    company.password = formData.get(\"password\") as string;\r\n    company.name = (document.querySelector(\r\n      \"#companyName\"\r\n    ) as HTMLInputElement).value;\r\n    axios\r\n      .post(globals.urls.localUrl + \":8080//api/admin/updateCompany\", company, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        fetchCompanies();\r\n        setFetchedCompany(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  const fetchCompanies = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  const fetchCompanyByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#updateCompanyForm\"));\r\n    if ((formData.get(\"companyId\") as string) === \"\") {\r\n      return;\r\n    }\r\n    const companyId = parseInt(formData.get(\"companyId\") as string);\r\n\r\n    for (const company of fetchedData) {\r\n      if (company.id === companyId) {\r\n        setFetchedUpdate(company);\r\n        return;\r\n      }\r\n    }\r\n    setErr(new ErrorModel());\r\n  };\r\n\r\n  return (\r\n    <div className=\"UpdateCompany\">\r\n      <h3 className=\"h3Div\">Update Company</h3>\r\n      <Form id=\"updateCompanyForm\" onSubmit={updateCompanyHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Control\r\n              id=\"companyId\"\r\n              name=\"companyId\"\r\n              as=\"select\"\r\n              size=\"lg\"\r\n              onChange={fetchCompanyByIdHandler}\r\n            >\r\n              <option value=\"\">-- choose one --</option>\r\n              {fetchedData && (\r\n                <>\r\n                  {fetchedData.map((opt: CompanyModel) => {\r\n                    return (\r\n                      <option key={opt.id} value={opt.id}>\r\n                        ID)\r\n                        {opt.id} Name: {opt.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Name: </Form.Label>\r\n            <Form.Control\r\n              name=\"companyName\"\r\n              id=\"companyName\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.name}\r\n              disabled={true}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control\r\n              name=\"email\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.email}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.password}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CompanyTable\r\n        err={err}\r\n        data={fetchedCompany}\r\n        title=\"COMPANY UPDATED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateCompany;\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport \"./UpdateCustomer.css\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface UcProps {\r\n  token: string;\r\n}\r\n\r\nfunction UpdateCustomer(props: UcProps) {\r\n  const token = props.token;\r\n  let [fetchedUpdate, setFetchedUpdate] = useState<CustomerModel>(null);\r\n  let [fetchedCustomer, setFetchedCustomer] = useState<CustomerModel>(null);\r\n  const [fetchedData, setFetchedData] = useState<CustomerModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const updateCustomerHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#updateCustomerForm\")\r\n    );\r\n    let customer: CustomerModel = new CustomerModel();\r\n    customer.id = fetchedUpdate.id;\r\n    customer.email = formData.get(\"email\") as string;\r\n    customer.password = formData.get(\"password\") as string;\r\n    customer.first_name = formData.get(\"firstName\") as string;\r\n    customer.last_name = formData.get(\"lastName\") as string;\r\n    axios\r\n      .post(\r\n        globals.urls.localUrl + \":8080//api/admin/updateCustomer\",\r\n        customer,\r\n        { headers: { token: token } }\r\n      )\r\n      .then(function (response) {\r\n        fetchCustomers();\r\n        setFetchedCustomer(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n  const fetchCustomerByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#updateCustomerForm\")\r\n    );\r\n    if ((formData.get(\"customerId\") as string) === \"\") {\r\n      return;\r\n    }\r\n    const customerId = parseInt(formData.get(\"customerId\") as string);\r\n\r\n    for (const customer of fetchedData) {\r\n      if (customer.id === customerId) {\r\n        setFetchedUpdate(customer);\r\n        return;\r\n      }\r\n    }\r\n    setErr(new ErrorModel());\r\n  };\r\n\r\n  const fetchCustomers = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"UpdateCustomer\">\r\n      <h3 className=\"h3Div\">Update Customer</h3>\r\n      <Form id=\"updateCustomerForm\" onSubmit={updateCustomerHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Control\r\n            id=\"customerId\"\r\n            name=\"customerId\"\r\n            as=\"select\"\r\n            size=\"lg\"\r\n            onChange={fetchCustomerByIdHandler}\r\n          >\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CustomerModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID) {opt.id}\r\n                      {\"\\u00A0\"} {\"\\u00A0\"}\r\n                      {\"\\u00A0\"} Name: {opt.first_name} {opt.last_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n          <Form.Group>\r\n            <Form.Label>First Name: </Form.Label>\r\n            <Form.Control\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.first_name}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Last Name: </Form.Label>\r\n            <Form.Control\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.last_name}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control\r\n              name=\"email\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.email}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.password}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CustomerTable\r\n        err={err}\r\n        data={fetchedCustomer}\r\n        title=\"CUSTOMER UPDATED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateCustomer;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./GetAllCompanies.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetAllCompanies = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get<CompanyModel[]>(\r\n        globals.urls.localUrl + \":8080//api/admin/getAllCompanies\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(\r\n          <div>\r\n            <h3>Companies List</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr key=\"-1\">\r\n                  <th>#</th>\r\n                  <th>ID</th>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Password</th>\r\n                </tr>\r\n              </thead>{\" \"}\r\n              <tbody>\r\n                {response.data.map((company, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{company.id}</td>\r\n                    <td>{company.name}</td>\r\n                    <td>{company.email}</td>\r\n                    <td>{company.password}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n  return <div className=\"GetAllCompanies\">{st}</div>;\r\n};\r\nexport default GetAllCompanies;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"./GetAllCustomers.css\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\nconst GetAllCustomers = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get<CustomerModel[]>(\r\n        globals.urls.localUrl + \":8080//api/admin/getAllCustomers\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(\r\n          <div>\r\n            <h3 className=\"GetAllCustomers\">Customers List</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr key=\"-1\">\r\n                  <th>#</th>\r\n                  <th>ID</th>\r\n                  <th>First Name</th>\r\n                  <th>Last Name</th>\r\n                  <th>Email</th>\r\n                  <th>Password</th>\r\n                </tr>\r\n              </thead>{\" \"}\r\n              <tbody>\r\n                {response.data.map((customer, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{customer.id}</td>\r\n                    <td>{customer.first_name}</td>\r\n                    <td>{customer.last_name}</td>\r\n                    <td>{customer.email}</td>\r\n                    <td>{customer.password}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n  return <div>{st}</div>;\r\n};\r\nexport default GetAllCustomers;\r\n","import \"./CouponsTable.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport CouponModel from \"../../Models/CouponModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\nimport { useState } from \"react\";\r\n\r\ninterface CpProps {\r\n  data: CouponModel[];\r\n  title: string;\r\n  showTitleWhenEmpty?: boolean;\r\n  err?: ErrorModel;\r\n  selectRow?: Function;\r\n}\r\n\r\nconst CouponsTable = (props: CpProps) => {\r\n  const [rowHovered, setRowHovered] = useState(-1);\r\n  const cat = [\"\", \"FOOD\", \"MOVIE\", \"DISCOUNT\", \"RESTAURANT\", \"VACATION\"];\r\n\r\n  const handleHover = (row: number) => {\r\n    setRowHovered(row);\r\n  };\r\n\r\n  const handleSelect = (id: number) => {\r\n    if (props.selectRow) props.selectRow(id);\r\n  };\r\n  let fetchedCoupons = props.data;\r\n  if (fetchedCoupons) {\r\n    return (\r\n      <div className=\"CouponsTable\">\r\n        <div className=\"h3Div\">\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr className=\"tableRow\">\r\n              <th>ID</th>\r\n              <th>Category</th>\r\n              <th>Company ID</th>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Amount</th>\r\n              <th>Price</th>\r\n              <th>Image</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {fetchedCoupons.map((coupon, index) => (\r\n              <tr\r\n                key={index}\r\n                className={\r\n                  rowHovered === index ? \"tableRow HoveredRow\" : \"tableRow\"\r\n                }\r\n                onMouseEnter={() => handleHover(index)}\r\n                onMouseLeave={() => handleHover(-1)}\r\n                onClick={() => handleSelect(coupon.id)}\r\n              >\r\n                <td>{coupon.id}</td>\r\n                <td>\r\n                  #{coupon.categoryId} -- {cat[coupon.categoryId]}\r\n                </td>\r\n                <td>{coupon.company.id}</td>\r\n                <td>{coupon.title}</td>\r\n                <td>{coupon.description}</td>\r\n                <td>{coupon.startDate}</td>\r\n                <td>{coupon.endDate}</td>\r\n                <td>{coupon.amount}</td>\r\n                <td>{coupon.price}</td>\r\n                <td>\r\n                  <div className=\"BoxImage\">\r\n                    <img src={coupon.image} alt={coupon.image} />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className=\"h3Div\">\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (props.showTitleWhenEmpty === true) {\r\n        return <h3 className=\"h3Div\"> {props.title} </h3>;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default CouponsTable;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./GetCompany.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompany = (props: GcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCompany, setFetchedCompany] = useState<CompanyModel>(null);\r\n  let [fetchedCoupons, setFetchedCoupons] = useState<CouponModel[]>(null);\r\n  let [fetchedData, setFetchedData] = useState<CompanyModel[]>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCompanyByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#getCompanyForm\"));\r\n    const companyId = parseInt(formData.get(\"companyId\") as string);\r\n    setFetchedCompany(null);\r\n    setFetchedCoupons(null);\r\n    let found = false;\r\n    for (const company of fetchedData) {\r\n      if (company.id === companyId) {\r\n        setFetchedCompany(company);\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!found) setErr(new ErrorModel());\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/admin/getCompanyCoupons/\" +\r\n          companyId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setFetchedCoupons(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"GetCompany\">\r\n      <h3 className=\"h3Div\">Get Company details</h3>\r\n      <Form id=\"getCompanyForm\">\r\n        <div className=\"FormColl\">\r\n          <Form.Control\r\n            name=\"companyId\"\r\n            as=\"select\"\r\n            id=\"companyId\"\r\n            size=\"lg\"\r\n            onChange={fetchCompanyByIdHandler}\r\n          >\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CompanyModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID)\r\n                      {opt.id} Name: {opt.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n        </div>\r\n      </Form>\r\n      <div>\r\n        {fetchedCompany && (\r\n          <CompanyTable\r\n            err={err}\r\n            data={fetchedCompany}\r\n            title={fetchedCompany.name}\r\n          />\r\n        )}\r\n        {fetchedCoupons && (\r\n          <CouponsTable data={fetchedCoupons} title=\"Company's Coupons\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompany;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./GetCustomer.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomer = (props: GcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCustomer, setFetchedCustomer] = useState<CustomerModel>(null);\r\n  let [fetchedCoupons, setFetchedCoupons] = useState<CouponModel[]>(null);\r\n  let [fetchedData, setFetchedData] = useState<CustomerModel[]>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCustomerByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#getCustomerForm\"));\r\n    const customerId = parseInt(formData.get(\"customerId\") as string);\r\n    setFetchedCustomer(null);\r\n    setFetchedCoupons(null);\r\n    let found = false;\r\n    for (const customer of fetchedData) {\r\n      if (customer.id === customerId) {\r\n        setFetchedCustomer(customer);\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!found) setErr(new ErrorModel());\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/admin/getCustomerCoupons/\" +\r\n          customerId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setFetchedCoupons(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"GetCustomer\">\r\n      <Form id=\"getCustomerForm\">\r\n        <div className=\"FormColl\">\r\n          <Form.Control\r\n            id=\"customerId\"\r\n            name=\"customerId\"\r\n            as=\"select\"\r\n            size=\"lg\"\r\n            onChange={fetchCustomerByIdHandler}\r\n          >\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CustomerModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID) {opt.id}\r\n                      {\"\\u00A0\"} {\"\\u00A0\"}\r\n                      {\"\\u00A0\"} Name: {opt.first_name} {opt.last_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n        </div>\r\n      </Form>\r\n      <div>\r\n        {fetchedCustomer && (\r\n          <CustomerTable\r\n            err={err}\r\n            data={fetchedCustomer}\r\n            title={fetchedCustomer.first_name + \" \" + fetchedCustomer.last_name}\r\n          />\r\n        )}\r\n        {fetchedCoupons && (\r\n          <CouponsTable data={fetchedCoupons} title=\"Customer's Coupons\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomer;\r\n","import \"./Admin.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddCompany from \"../AddCompany/AddCompany\";\r\nimport AddCustomer from \"../AddCustomer/AddCustomer\";\r\nimport DeleteCompany from \"../DeleteCompany/DeleteCompany\";\r\nimport DeleteCustomer from \"../DeleteCustomer/DeleteCustomer\";\r\nimport UpdateCompany from \"../UpdateCompany/UpdateCompany\";\r\nimport UpdateCustomer from \"../UpdateCustomer/UpdateCustomer\";\r\nimport GetAllCompanies from \"../GetAllCompanies/GetAllCompanies\";\r\nimport GetAllCustomers from \"../GetAllCustomers/GetAllCustomers\";\r\nimport GetCompany from \"../GetCompany/GetCompany\";\r\nimport GetCustomer from \"../GetCustomer/GetCustomer\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport store from \"../../../../Redux/Store\";\r\nimport { setSessionAction } from \"../../../../Redux/SessionState\";\r\nfunction Admin() {\r\n  const [subFormState, setSubFormState] = useState(0);\r\n  let [token, setToken] = useState(store.getState().SessionState.session.token);\r\n  const history = useHistory();\r\n\r\n  //let token = useSelector<SessionState, any>((state) => state.session.token);\r\n  const actionSelector = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    event.preventDefault();\r\n    setSubFormState(parseInt(event.target.value as string));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setToken(store.getState().SessionState.session.token);\r\n  }, [token]);\r\n\r\n  let subForm: JSX.Element;\r\n  switch (subFormState) {\r\n    case 1:\r\n      subForm = <AddCompany token={token} />;\r\n      break;\r\n    case 2:\r\n      subForm = <DeleteCompany token={token} />;\r\n      break;\r\n    case 3:\r\n      subForm = <UpdateCompany token={token} />;\r\n      break;\r\n    case 4:\r\n      subForm = <GetCompany token={token} />;\r\n      break;\r\n    case 5:\r\n      subForm = <GetAllCompanies token={token} />;\r\n      break;\r\n    case 6:\r\n      subForm = <AddCustomer token={token} />;\r\n      break;\r\n    case 7:\r\n      subForm = <DeleteCustomer token={token} />;\r\n      break;\r\n    case 8:\r\n      subForm = <UpdateCustomer token={token} />;\r\n      break;\r\n    case 9:\r\n      subForm = <GetCustomer token={token} />;\r\n      break;\r\n    case 10:\r\n      subForm = <GetAllCustomers token={token} />;\r\n      break;\r\n    case 11:\r\n      //dispatch(actions.setSession({ token: \"\", userType: -1 }));\r\n      store.dispatch(setSessionAction({ token: \"\", userType: -1 }));\r\n      history.push(\"/login\");\r\n      break;\r\n    default:\r\n      subForm = <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"h2\">Admin Menu</h2>\r\n      <div className=\"Admin\">\r\n        <Form id=\"actionForm\">\r\n          <Form.Group>\r\n            <Form.Label>Choose Action: </Form.Label>\r\n            <Form.Control\r\n              onChange={actionSelector}\r\n              name=\"action\"\r\n              as=\"select\"\r\n              id=\"actionSelect\"\r\n              size=\"lg\"\r\n            >\r\n              <option value=\"\">-- Choose one --</option>\r\n              <option value=\"1\"> Add new company</option>\r\n              <option value=\"2\"> Delete company</option>\r\n              <option value=\"3\"> Update company details</option>\r\n              <option value=\"4\"> Get company details</option>\r\n              <option value=\"5\"> Get all companies</option>\r\n              <option value=\"6\"> Add customer</option>\r\n              <option value=\"7\"> Delete customer</option>\r\n              <option value=\"8\"> Update customer details</option>\r\n              <option value=\"9\"> Get customer details</option>\r\n              <option value=\"10\"> Get all customers</option>\r\n              <option value=\"11\"> Exit</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n        <div className=\"SubFormAdmin\">{subForm}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import CouponModel from \"../../../Models/CouponModel\";\nimport ErrorModel from \"../../../Models/ErrorModel\";\nimport \"./CouponCard.css\";\n\ninterface CcProps {\n  data: CouponModel;\n  err: ErrorModel;\n}\n\nfunction CouponCard(props: CcProps): JSX.Element {\n  const cat = [\"\", \"FOOD\", \"MOVIE\", \"DISCOUNT\", \"RESTAURANT\", \"VACATION\"];\n\n  return (\n    <div className=\"CouponCard\">\n      <div className=\"BorderBox\">\n        <div className=\"Box\">\n          <div>\n            <p>ID: {props.data.id}</p>\n            <p>TITLE: {props.data.title}</p>\n            <p>DESCRIPTION: {props.data.description}</p>\n            <p>\n              CATEGORY:#{props.data.categoryId} -- {cat[props.data.categoryId]}\n            </p>\n          </div>\n          <div>\n            <p>START DATE: {props.data.startDate}</p>\n            <p>END DATE {props.data.endDate}</p>\n            <p>PRICE: ${props.data.price}</p>\n            <p>AVAILABLE: {props.data.amount}</p>\n          </div>\n        </div>\n        <div className=\"BoxImage\">\n          <img src={props.data.image} alt={props.data.image} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CouponCard;\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./AddCoupon.css\";\r\n//import CouponTable from \"../../../UI/CouponTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CouponCard from \"../../../UI/CouponCard/CouponCard\";\r\n\r\ninterface AcProps {\r\n  token: string;\r\n}\r\n\r\nconst AddCoupon = (props: AcProps) => {\r\n  const token = props.token;\r\n  let [fetchedData, setFetchedData] = useState<CouponModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const addCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#addCouponForm\"));\r\n    formData.append(\"id\", \"0\");\r\n    formData.append(\"image\", (formData.get(\"imageFile\") as File).name);\r\n    axios\r\n      .post(globals.urls.localUrl + \":8080//api/company/addCoupon\", formData, {\r\n        headers: { token: token, \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCoupon\">\r\n      <h3 className=\"h3Div\">Add Coupon</h3>\r\n      <Form id=\"addCouponForm\" onSubmit={addCouponHandler}>\r\n        <div className=\"AddCouponFormDiv\">\r\n          <div className=\"AddCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>Category ID: </Form.Label>\r\n              <Form.Control\r\n                name=\"categoryId\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"5\"\r\n                className=\"FormEl\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Title: </Form.Label>\r\n              <Form.Control name=\"title\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Start date: </Form.Label>\r\n              <Form.Control type=\"date\" name=\"startDate\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>End date: </Form.Label>\r\n              <Form.Control type=\"date\" name=\"endDate\" />\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"AddCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>Description: </Form.Label>\r\n              <Form.Control name=\"description\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Amount: </Form.Label>\r\n              <Form.Control name=\"amount\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Price: </Form.Label>\r\n              <Form.Control name=\"price\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Image: </Form.Label>\r\n              <Form.Control name=\"imageFile\" type=\"file\" />\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <div>\r\n        {fetchedData && <h4>COUPON ADDED SUCCESSFULLY</h4>}\r\n        {fetchedData && <CouponCard err={err} data={fetchedData} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCoupon;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./DeleteCoupon.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CouponCard from \"../../../UI/CouponCard/CouponCard\";\r\n\r\ninterface DcProps {\r\n  token: string;\r\n}\r\n\r\nconst DeleteCoupon = (props: DcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCoupon, setFetchedCoupon] = useState<CouponModel>(null);\r\n  let [fetchedData, setFetchedData] = useState<CouponModel[]>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const deleteCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#deleteCouponForm\"));\r\n    const id = parseInt(formData.get(\"id\") as string);\r\n    axios\r\n      .delete(globals.urls.localUrl + \":8080//api/company/deleteCoupon/\" + id, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        fetchCoupons();\r\n        setFetchedCoupon(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchCoupons = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/company/getCompanyCoupons/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/company/getCompanyCoupons/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"DeleteCoupon\">\r\n      <h3 className=\"h3Div\">Delete Coupon</h3>\r\n      <Form id=\"deleteCouponForm\" onSubmit={deleteCouponHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Control name=\"id\" as=\"select\" id=\"actionSelect\" size=\"lg\">\r\n              <option value=\"\">-- choose one --</option>\r\n              {fetchedData && (\r\n                <>\r\n                  {fetchedData.map((opt: CouponModel) => {\r\n                    return (\r\n                      <option key={opt.id} value={opt.id}>\r\n                        ID) {opt.id}\r\n                        {\"\\u00A0\"} {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        Title: {opt.title}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </Form.Control>\r\n            <Button type=\"submit\">SUBMIT</Button>\r\n          </Form.Group>\r\n        </div>\r\n      </Form>\r\n      {fetchedCoupon && (\r\n        <>\r\n          <h3>COUPON DELETED SUCCESSFULLY</h3>\r\n          <CouponCard err={err} data={fetchedCoupon} />{\" \"}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteCoupon;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./UpdateCoupon.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CouponCard from \"../../../UI/CouponCard/CouponCard\";\r\n\r\ninterface UcProps {\r\n  token: string;\r\n}\r\n\r\nconst UpdateCoupon = (props: UcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCoupon, setFetchedCoupon] = useState<CouponModel>(null);\r\n  let [fetchedUpdate, setFetchedUpdate] = useState<CouponModel>(null);\r\n  let [fetchedData, setFetchedData] = useState<CouponModel[]>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const updateCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#updateCouponForm\"));\r\n    formData.append(\"id\", fetchedCoupon.id.toString());\r\n    if (formData.get(\"imageFile\") as File)\r\n      formData.append(\"image\", (formData.get(\"imageFile\") as File).name);\r\n    axios\r\n      .post(\r\n        globals.urls.localUrl + \":8080//api/company/updateCoupon\",\r\n        formData,\r\n        {\r\n          headers: { token: token, \"Content-Type\": \"multipart/form-data\" },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        fetchCoupons();\r\n        setFetchedCoupon(null);\r\n        setFetchedUpdate(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  const fetchCouponByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#updateCouponForm\"));\r\n    if ((formData.get(\"couponId\") as string) === \"\") {\r\n      return;\r\n    }\r\n    const couponId = parseInt(formData.get(\"couponId\") as string);\r\n\r\n    for (const coupon of fetchedData) {\r\n      if (coupon.id === couponId) {\r\n        (document.getElementById(\r\n          \"updateCouponForm\"\r\n        ) as HTMLFormElement).reset();\r\n        setFetchedCoupon(coupon);\r\n        return;\r\n      }\r\n    }\r\n    (document.getElementById(\"updateCouponForm\") as HTMLFormElement).reset();\r\n    setErr(new ErrorModel());\r\n  };\r\n\r\n  const fetchCoupons = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/company/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/company/getCompanyCoupons/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"UpdateCouponWrapper\">\r\n      <h3 className=\"h3Div\">Update Coupon</h3>\r\n      <Form id=\"updateCouponForm\" onSubmit={updateCouponHandler}>\r\n        <Form.Group>\r\n          <Form.Label>ID: </Form.Label>\r\n          <div className=\"UpdateCouponFormColl\">\r\n            <Form.Control name=\"couponId\" as=\"select\" id=\"couponId\" size=\"lg\">\r\n              <option value=\"\">-- choose one --</option>\r\n              {fetchedData && (\r\n                <>\r\n                  {fetchedData.map((opt: CouponModel) => {\r\n                    return (\r\n                      <option key={opt.id} value={opt.id}>\r\n                        ID) {opt.id}\r\n                        {\"\\u00A0\"} {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        Title: {opt.title}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </Form.Control>\r\n          </div>\r\n        </Form.Group>\r\n        <Button id=\"fetch\" onClick={fetchCouponByIdHandler}>\r\n          FETCH\r\n        </Button>\r\n        <div className=\"UpdateCouponFormDiv\">\r\n          <div className=\"UpdateCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>Category ID: </Form.Label>\r\n              <Form.Control\r\n                name=\"categoryId\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"5\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.categoryId}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Title: </Form.Label>\r\n              <Form.Control\r\n                name=\"title\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.title}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Description: </Form.Label>\r\n              <Form.Control\r\n                name=\"description\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.description}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Start date: </Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                defaultValue={\r\n                  fetchedCoupon && fetchedCoupon.startDate.toString()\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"UpdateCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>End date: </Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.endDate.toString()}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Amount: </Form.Label>\r\n              <Form.Control\r\n                name=\"amount\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.amount}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Price: </Form.Label>\r\n              <Form.Control\r\n                name=\"price\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.price}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Image: </Form.Label>\r\n              <Form.Control type=\"file\" name=\"imageFile\" />\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <div>\r\n        {fetchedCoupon && <CouponCard err={err} data={fetchedCoupon} />}\r\n        {fetchedUpdate && <h4>COUPON UPDATED SUCCESSFULLY</h4>}\r\n        {fetchedUpdate && <CouponCard err={err} data={fetchedUpdate} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateCoupon;\r\n","import axios from \"axios\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport \"./GetCompanyCouponsByCategoryId.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\ninterface GpProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyCouponsByCategoryId = (props: GpProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByIdForm\")\r\n    );\r\n    const categoryId = parseInt(formData.get(\"categoryId\") as string);\r\n    if (formData.get(\"categoryId\") === \"\") {\r\n      setSt(null);\r\n      return;\r\n    }\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080/api/company/getCompanyCouponsByCategory/\" +\r\n          categoryId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"GetCompanyCouponsByCategoryId\">\r\n      <h3 className=\"h3Div\">Get Company coupons by category ID</h3>\r\n      <Form id=\"fetchCouponsByIdForm\" onSubmit={fetchCouponsHandler}>\r\n        <div className=\"innerFormDiv\">\r\n          <Form.Control name=\"categoryId\" as=\"select\" id=\"categoryId\" size=\"lg\">\r\n            <option value=\"\">-- choose one --</option>\r\n            <option value=\"1\">1) Food</option>\r\n            <option value=\"2\">2) Movie</option>\r\n            <option value=\"3\">3) Discount</option>\r\n            <option value=\"4\">4) Restaurant</option>\r\n            <option value=\"5\">5) Vacation</option>\r\n          </Form.Control>\r\n          <Button type=\"submit\">FETCH</Button>\r\n        </div>\r\n      </Form>\r\n      {st && <CouponsTable err={err} data={st} title=\"Coupons list\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompanyCouponsByCategoryId;\r\n","import axios from \"axios\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCompanyCoupons.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyCoupons = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>([]);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/company/getCompanyCoupons\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"GetCompanyCoupons\">\r\n      <CouponsTable err={err} data={st} title=\"Coupons List\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompanyCoupons;\r\n","import axios from \"axios\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport \"./GetCompanyCouponsByMaxPrice.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GpProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyCouponsByMaxPrice = (props: GpProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByPriceForm\")\r\n    );\r\n    const mPrice = parseFloat(formData.get(\"mPrice\") as string);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/company//getCompanyCouponsByMaxPrice/\" +\r\n          mPrice,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"GetCompanyCouponsByMaxPrice\">\r\n      <h3 className=\"h3Div\">Get Company coupons by Max Price</h3>\r\n      <Form id=\"fetchCouponsByPriceForm\" onSubmit={fetchCouponsHandler}>\r\n        <div className=\"innerFormDiv\">\r\n          <Form.Group>\r\n            <Form.Label>MAXIMUM PRICE: </Form.Label>\r\n            <Form.Control id=\"mPrice\" name=\"mPrice\" />\r\n          </Form.Group>\r\n          <Button type=\"submit\">FETCH</Button>\r\n        </div>\r\n      </Form>\r\n      {st && <CouponsTable err={err} data={st} title=\"Coupons List\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompanyCouponsByMaxPrice;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface CdProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyDetails = (props: CdProps) => {\r\n  const token = props.token;\r\n  const [cm, setCm] = useState<CompanyModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get<CompanyModel>(\r\n        globals.urls.localUrl + \":8080//api/company/getCompanyDetails\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setCm(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n  if (cm) {\r\n    return <CompanyTable err={err} data={cm} title={cm.name} />;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default GetCompanyDetails;\r\n","import CouponCard from \"../../../UI/CouponCard/CouponCard\";\nimport \"./GetCompanyCoupon.css\";\nimport axios from \"axios\";\nimport { SyntheticEvent, useEffect, useState } from \"react\";\nimport globals from \"../../../../Services/Globals\";\nimport { Form, Button } from \"react-bootstrap\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport ErrorModel from \"../../../../Models/ErrorModel\";\n\ninterface GcProps {\n  token: string;\n}\nfunction GetCompanyCoupon(props: GcProps): JSX.Element {\n  const token = props.token;\n  let [fetchedCoupon, setFetchedCoupon] = useState<CouponModel>(null);\n  let [fetchedData, setFetchedData] = useState<CouponModel[]>(null);\n  let [err, setErr] = useState<ErrorModel>(null);\n  const fetchCouponHandler = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const formData = new FormData(document.querySelector(\"#getCouponForm\"));\n    const couponId = parseInt(formData.get(\"couponId\") as string);\n    for (const coupon of fetchedData) {\n      if (coupon.id === couponId) {\n        setFetchedCoupon(coupon);\n        break;\n      }\n      setErr(new ErrorModel());\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(globals.urls.localUrl + \":8080//api/company/getCompanyCoupons/\", {\n        headers: { token: token },\n      })\n      .then(function (response) {\n        setFetchedData(response.data);\n      })\n      .catch(function (error) {\n        setErr(error);\n        console.log(error);\n      });\n  }, [token]);\n\n  return (\n    <div className=\"GetCompanyCoupon\">\n      <h3 className=\"h3Div\">Get Coupon details</h3>\n      <Form id=\"getCouponForm\" onSubmit={fetchCouponHandler}>\n        <div className=\"FormColl\">\n          <Form.Control name=\"couponId\" as=\"select\" id=\"couponId\" size=\"lg\">\n            <option value=\"\">-- choose one --</option>\n            {fetchedData && (\n              <>\n                {fetchedData.map((opt: CouponModel) => {\n                  return (\n                    <option key={opt.id} value={opt.id}>\n                      ID) {opt.id}\n                      {\"\\u00A0\"} {\"\\u00A0\"}\n                      {\"\\u00A0\"}\n                      Title: {opt.title}\n                    </option>\n                  );\n                })}\n              </>\n            )}\n          </Form.Control>\n        </div>\n        <Button type=\"submit\">FETCH</Button>\n      </Form>\n      <div>\n        {fetchedCoupon && <CouponCard err={err} data={fetchedCoupon} />}\n      </div>\n    </div>\n  );\n}\n\nexport default GetCompanyCoupon;\n","import { useEffect, useState } from \"react\";\r\nimport \"./Company.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport AddCoupon from \"../AddCoupon/AddCoupon\";\r\nimport DeleteCoupon from \"../DeleteCoupon/DeleteCoupon\";\r\nimport UpdateCoupon from \"../UpdateCoupon/UpdateCoupon\";\r\nimport GetCompanyCouponsByCategoryId from \"../GetCompanyCouponsByCategoryId/GetCompanyCouponsByCategory\";\r\nimport GetCompanyCoupons from \"../GetCompanyCoupons/GetCompanyCoupons\";\r\nimport GetCompanyCouponsByMaxPrice from \"../GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice\";\r\nimport GetCompanyDetails from \"../GetCompanyDetails/GetCompanyDetails\";\r\nimport GetCompanyCoupon from \"../GetCompanyCoupon/GetCompanyCoupon\";\r\nimport store from \"../../../../Redux/Store\";\r\nimport { setSessionAction } from \"../../../../Redux/SessionState\";\r\n\r\nconst Company = (): JSX.Element => {\r\n  const actionSelector = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    event.preventDefault();\r\n    setSubFormState(parseInt(event.target.value as string));\r\n  };\r\n  const [subFormState, setSubFormState] = useState(0);\r\n  let [token, setToken] = useState(store.getState().SessionState.session.token);\r\n  const history = useHistory();\r\n  //let token = useSelector<SessionState, any>((state) => state.session.token);\r\n  useEffect(() => {\r\n    setToken(store.getState().SessionState.session.token);\r\n  }, [token]);\r\n\r\n  let subForm: JSX.Element;\r\n  switch (subFormState) {\r\n    case 1:\r\n      subForm = <AddCoupon token={token} />;\r\n      break;\r\n    case 2:\r\n      subForm = <DeleteCoupon token={token} />;\r\n      break;\r\n    case 3:\r\n      subForm = <UpdateCoupon token={token} />;\r\n      break;\r\n    case 4:\r\n      subForm = <GetCompanyCoupon token={token} />;\r\n      break;\r\n    case 5:\r\n      subForm = <GetCompanyCoupons token={token} />;\r\n      break;\r\n    case 6:\r\n      subForm = <GetCompanyCouponsByCategoryId token={token} />;\r\n      break;\r\n    case 7:\r\n      subForm = <GetCompanyCouponsByMaxPrice token={token} />;\r\n      break;\r\n    case 8:\r\n      subForm = <GetCompanyDetails token={token} />;\r\n      break;\r\n    case 9:\r\n      store.dispatch(setSessionAction({ token: \"\", userType: -1 }));\r\n      history.replace(\"/login\");\r\n      break;\r\n    default:\r\n      subForm = <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Company\">\r\n      <h3>Company Menu</h3>\r\n      <div className=\"FormDiv\">\r\n        <Form id=\"actionForm\">\r\n          <div className=\"Field\">\r\n            <Form.Group>\r\n              <Form.Label>Choose Action: </Form.Label>\r\n              <Form.Control\r\n                onChange={actionSelector}\r\n                value={subFormState}\r\n                name=\"action\"\r\n                as=\"select\"\r\n                id=\"actionSelect\"\r\n                size=\"lg\"\r\n              >\r\n                <option value=\"\">-- choose one --</option>\r\n                <option value=\"1\"> add new coupon</option>\r\n                <option value=\"2\"> delete coupon</option>\r\n                <option value=\"3\"> update coupon details</option>\r\n                <option value=\"4\"> get company coupon by ID</option>\r\n                <option value=\"5\"> get company coupons</option>\r\n                <option value=\"6\"> get company coupons by category</option>\r\n                <option value=\"7\"> get company coupons by max price</option>\r\n                <option value=\"8\"> get company details</option>\r\n                <option value=\"9\"> exit</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n        </Form>\r\n        <div className=\"SubFormCompany\">{subForm}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import \"./Backdrop.css\";\r\n\r\ninterface BackdropProps {\r\n  clicked: Function;\r\n  show: boolean;\r\n}\r\n\r\nconst Backdrop = (props: BackdropProps) => {\r\n  return props.show ? (\r\n    <div className=\"Backdrop\" onClick={() => props.clicked()}></div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\nexport default Backdrop;\r\n","import React, { Component } from \"react\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop\";\r\n\r\ninterface ModalProps {\r\n  show: boolean;\r\n  modalClosed: Function;\r\n  width: string;\r\n  left: string;\r\n}\r\nclass Modal extends Component<ModalProps> {\r\n  shouldComponentUpdate(nextProps: ModalProps) {\r\n    return nextProps.show !== this.props.show;\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n          className=\"Modal\"\r\n          style={{\r\n            width: this.props.width,\r\n            left: this.props.left,\r\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-200vh)\",\r\n            opacity: this.props.show ? 1 : 0,\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","//import { SyntheticEvent } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./PurchaseCoupon.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CouponCard from \"../../../UI/CouponCard/CouponCard\";\r\nimport Modal from \"../../../UI/Modal/Modal\";\r\n\r\ninterface PcProps {\r\n  token: string;\r\n}\r\n\r\nconst PurchaseCoupon = (props: PcProps) => {\r\n  const token = props.token;\r\n  const [resState, setResState] = useState<CouponModel[]>(null);\r\n  const [cp, setCp] = useState<CouponModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [selectId, setSelectedId] = useState<number>(-1);\r\n  const purchaseCouponHandler = () => {\r\n    axios\r\n      .post(\r\n        globals.urls.localUrl +\r\n          \":8080//api/customer/purchaseCoupon/\" +\r\n          selectId,\r\n        {},\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setCp(response.data);\r\n        changeShowModal();\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        changeShowModal();\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/customer/getAvailableCouponsforCustomer\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setResState(response.data);\r\n        console.log(Object.keys(response.data).length);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  }, [token, cp]);\r\n\r\n  const changeShowModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleSelectedRow = (id: number) => {\r\n    setSelectedId(id);\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={showModal}\r\n        modalClosed={changeShowModal}\r\n        width=\"45%\"\r\n        left=\"27.5%\"\r\n      >\r\n        <p>ARE YOU SURE?</p>\r\n        {resState && (\r\n          <CouponCard\r\n            data={resState.filter((el) => el.id === selectId)[0]}\r\n            err={err}\r\n          />\r\n        )}\r\n\r\n        <Button onClick={purchaseCouponHandler}>YES</Button>\r\n        <Button variant=\"danger\" onClick={changeShowModal}>\r\n          NO\r\n        </Button>\r\n      </Modal>\r\n      <div className=\"PurchaseCoupon\">\r\n        <h3 className=\"h3Div\">Purchase Coupon</h3>\r\n      </div>\r\n      {resState && (\r\n        <CouponsTable\r\n          err={err}\r\n          showTitleWhenEmpty\r\n          data={resState}\r\n          //selectRow={purchaseCouponHandler}\r\n          selectRow={handleSelectedRow}\r\n          title={\r\n            Object.keys(resState).length > 0\r\n              ? \"AVAILABLE COUPONS\"\r\n              : \"NO COUPONS AVAILABLE\"\r\n          }\r\n        />\r\n      )}\r\n      {cp && (\r\n        <>\r\n          <h3>Coupon purchased successfully</h3>\r\n          <CouponCard err={err} data={cp} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseCoupon;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCustomerCoupons.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomerCoupons = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/customer/getCustomerCoupons\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setSt(error);\r\n      });\r\n  }, [token]);\r\n  return (\r\n    <div className=\"GetCustomerCoupons\">\r\n      <CouponsTable data={st} title=\"Customer's Coupons\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomerCoupons;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCustomerCouponsByCategory.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomerCouponsByCategory = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByIdForm\")\r\n    );\r\n    const categoryId = parseInt(formData.get(\"categoryId\") as string);\r\n    if (formData.get(\"categoryId\") === \"\") {\r\n      setSt(null);\r\n      return;\r\n    }\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080/api/customer/getCustomerCouponsByCategory/\" +\r\n          categoryId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"GetCustomerCouponsByCategory\">\r\n        <h3 className=\"h3Div\">Customer's Coupons by Category ID</h3>\r\n        <Form id=\"fetchCouponsByIdForm\" onSubmit={fetchCouponsHandler}>\r\n          <div className=\"FormColl\">\r\n            <Form.Control\r\n              name=\"categoryId\"\r\n              as=\"select\"\r\n              id=\"categoryId\"\r\n              size=\"lg\"\r\n            >\r\n              <option value=\"\">-- choose one --</option>\r\n              <option value=\"1\">1) Food</option>\r\n              <option value=\"2\">2) Movie</option>\r\n              <option value=\"3\">3) Discount</option>\r\n              <option value=\"4\">4) Restaurant</option>\r\n              <option value=\"5\">5) Vacation</option>\r\n            </Form.Control>\r\n          </div>\r\n          <Button type=\"submit\">FETCH</Button>\r\n        </Form>\r\n      </div>\r\n      <br />\r\n      {st && <CouponsTable err={err} data={st} title=\"Coupons List\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomerCouponsByCategory;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCustomerCouponsByMaxPrice.css\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomerCouponsByMaxPrice = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByPriceForm\")\r\n    );\r\n    const mPrice = parseFloat(formData.get(\"mPrice\") as string);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/customer/getCustomerCouponsByMaxPrice/\" +\r\n          mPrice,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"GetCustomerCouponsByMaxPrice\">\r\n        <h3 className=\"h3Div\">Customer's Coupons by Max Price</h3>\r\n        <Form id=\"fetchCouponsByPriceForm\" onSubmit={fetchCouponsHandler}>\r\n          <div className=\"FormColl\">\r\n            <Form.Group>\r\n              <Form.Label>MAX PRICE: </Form.Label>\r\n              <Form.Control id=\"mPrice\" name=\"mPrice\" />\r\n            </Form.Group>\r\n            <Button type=\"submit\">FETCH</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <br />\r\n      <CouponsTable err={err} data={st} title=\"Coupons List\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomerCouponsByMaxPrice;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface CdProps {\r\n  token: string;\r\n}\r\nconst GetCustomerDetails = (props: CdProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CustomerModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/customer/getCustomerDetails\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  if (st) {\r\n    return (\r\n      <CustomerTable\r\n        err={err}\r\n        data={st}\r\n        title={st.first_name + \" \" + st.last_name}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default GetCustomerDetails;\r\n","import CouponCard from \"../../../UI/CouponCard/CouponCard\";\nimport \"./GetCustomerCoupon.css\";\nimport axios from \"axios\";\nimport { SyntheticEvent, useEffect, useState } from \"react\";\nimport globals from \"../../../../Services/Globals\";\nimport { Form, Button } from \"react-bootstrap\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport ErrorModel from \"../../../../Models/ErrorModel\";\n\ninterface GcProps {\n  token: string;\n  id?: number;\n}\nfunction GetCustomerCoupon(props: GcProps): JSX.Element {\n  const token = props.token;\n  let [fetchedCoupon, setFetchedCoupon] = useState<CouponModel>(null);\n  let [fetchedData, setFetchedData] = useState<CouponModel[]>(null);\n  let [err, setErr] = useState<ErrorModel>(null);\n  const fetchCouponHandler = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const formData = new FormData(document.querySelector(\"#getCouponForm\"));\n    const couponId = parseInt(formData.get(\"couponId\") as string);\n    if (formData.get(\"couponId\") === \"\") {\n      setFetchedCoupon(null);\n      return;\n    }\n    for (const coupon of fetchedData) {\n      if (coupon.id === couponId) {\n        setFetchedCoupon(coupon);\n        break;\n      }\n      setErr(new ErrorModel());\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(globals.urls.localUrl + \":8080//api/customer/getCustomerCoupons/\", {\n        headers: { token: token },\n      })\n      .then(function (response) {\n        setFetchedData(response.data);\n      })\n      .catch(function (error) {\n        setErr(error);\n        console.log(error);\n      });\n  }, [token]);\n\n  return (\n    <div className=\"GetCustomerCoupon\">\n      <h3 className=\"h3Div\">Get Coupon details</h3>\n      <Form id=\"getCouponForm\" onSubmit={fetchCouponHandler}>\n        <div className=\"FormColl\">\n          <Form.Control name=\"couponId\" as=\"select\" id=\"couponId\" size=\"lg\">\n            <option value=\"\">-- choose one --</option>\n            {fetchedData && (\n              <>\n                {fetchedData.map((opt: CouponModel) => {\n                  return (\n                    <option key={opt.id} value={opt.id}>\n                      ID) {opt.id}\n                      {\"\\u00A0\"} {\"\\u00A0\"}\n                      {\"\\u00A0\"}\n                      Title: {opt.title}\n                    </option>\n                  );\n                })}\n              </>\n            )}\n          </Form.Control>\n        </div>\n        <Button type=\"submit\">FETCH</Button>\n      </Form>\n      <div>\n        {fetchedCoupon && <CouponCard err={err} data={fetchedCoupon} />}\n      </div>\n    </div>\n  );\n}\n\nexport default GetCustomerCoupon;\n","import { useEffect, useState } from \"react\";\r\nimport \"./Customer.css\";\r\nimport PurchaseCoupon from \"../PurchaseCoupon/PurchaseCoupon\";\r\nimport GetCustomerCoupons from \"../GetCustomerCoupons/GetCustomerCoupons\";\r\nimport GetCustomerCouponsByCategoryId from \"../GetCustomerCouponsByCategory/GetCustomerCouponsByCategory\";\r\nimport GetCustomerCouponsByMaxPrice from \"../GetCustomerCouponsByMaxPrice/GetCustomerCouponsByMaxPrice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GetCustomerDetails from \"../GetCustomerDetails/GetCustomerDetails\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport GetCustomerCoupon from \"../GetCustomerCoupon/GetCustomerCoupon\";\r\nimport store from \"../../../../Redux/Store\";\r\nimport { setSessionAction } from \"../../../../Redux/SessionState\";\r\n\r\nfunction Customer() {\r\n  const [subFormState, setSubFormState] = useState(0);\r\n  let [token, setToken] = useState(store.getState().SessionState.session.token);\r\n  const history = useHistory();\r\n  let subForm: JSX.Element;\r\n  //let token = useSelector<SessionState, any>((state) => state.session.token);\r\n\r\n  useEffect(() => {\r\n    setToken(store.getState().SessionState.session.token);\r\n  }, [token]);\r\n\r\n  const actionSelector = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    event.preventDefault();\r\n    setSubFormState(parseInt(event.target.value as string));\r\n  };\r\n\r\n  switch (subFormState) {\r\n    case 1:\r\n      subForm = <PurchaseCoupon token={token} />;\r\n      break;\r\n    case 2:\r\n      subForm = <GetCustomerCoupon token={token} />;\r\n      break;\r\n    case 3:\r\n      subForm = <GetCustomerCoupons token={token} />;\r\n      break;\r\n    case 4:\r\n      subForm = <GetCustomerCouponsByCategoryId token={token} />;\r\n      break;\r\n    case 5:\r\n      subForm = <GetCustomerCouponsByMaxPrice token={token} />;\r\n      break;\r\n    case 6:\r\n      subForm = <GetCustomerDetails token={token} />;\r\n      break;\r\n    case 7:\r\n      //dispatch(actions.setSession({ token: \"\", userType: -1 }));\r\n      store.dispatch(setSessionAction({ token: \"\", userType: -1 }));\r\n      history.replace(\"/login\");\r\n      break;\r\n    default:\r\n      subForm = <div></div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h2 className=\"CustomerH2\">customer Menu</h2>\r\n      <div className=\"Customer\">\r\n        <Form id=\"actionForm\">\r\n          <div className=\"FormColl\">\r\n            <Form.Group>\r\n              <Form.Label>Choose Action: </Form.Label>\r\n              <Form.Control\r\n                onChange={actionSelector}\r\n                name=\"action\"\r\n                as=\"select\"\r\n                id=\"actionSelect\"\r\n                size=\"lg\"\r\n              >\r\n                <option value=\"\">-- choose one --</option>\r\n                <option value=\"1\"> purchase coupon</option>\r\n                <option value=\"2\"> get customer coupon by ID</option>\r\n                <option value=\"3\"> get customer coupons</option>\r\n                <option value=\"4\"> get customer coupons by category</option>\r\n                <option value=\"5\"> get customer coupons by max price</option>\r\n                <option value=\"6\"> get customer details</option>\r\n                <option value=\"7\"> exit</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n          {/* <MyButton type=\"submit\"> SUBMIT </MyButton> */}\r\n        </Form>\r\n        <div className=\"SubFormCustomer\">{subForm}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customer;\r\n","import { Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport \"./Unauthorized.css\";\n\nfunction Unauthorized(): JSX.Element {\n  const history = useHistory();\n  const handleClick = () => {\n    history.push(\"/login\");\n  };\n  console.log(\"UNAUTHORIZED\");\n  return (\n    <div className=\"Unauthorized\">\n      <p>YOU ARE UNAUTHORIZED</p>\n      <Button variant=\"danger\" onClick={handleClick}>\n        Return to login\n      </Button>\n    </div>\n  );\n}\n\nexport default Unauthorized;\n","import Header from \"./Header/Header\";\r\n//import Side from \"./Side/Side\";\r\nimport \"./Layout.css\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../MainArea/Login/Login\";\r\nimport Admin from \"../MainArea/AdminArea/Admin/Admin\";\r\nimport Company from \"../MainArea/CompanyArea/Company/Company\";\r\nimport Customer from \"../MainArea/CustomerArea/Cusotmer/Customer\";\r\nimport store from \"../../Redux/Store\";\r\nimport { Component } from \"react\";\r\nimport { Unsubscribe } from \"redux\";\r\nimport Unauthorized from \"../MainArea/Unauthorized/Unauthorized\";\r\n\r\ninterface LayoutState {\r\n  user: number;\r\n}\r\n\r\nclass Layout extends Component<{}, LayoutState> {\r\n  private unsubscribeMe: Unsubscribe;\r\n  public constructor(props: {}) {\r\n    super(props);\r\n    this.state = { user: -1 };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    // On any AppState change - call this function:\r\n    this.unsubscribeMe = store.subscribe(() => {\r\n      this.setState({ user: store.getState().SessionState.session.userType });\r\n    });\r\n  }\r\n  public componentWillUnmount(): void {\r\n    this.unsubscribeMe(); // Unsubscribe from the subscribe operation.\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"Layout\">\r\n          <header>\r\n            <Header />\r\n          </header>\r\n          <main>\r\n            <Switch>\r\n              <Route path=\"/login\" component={Login} exact />\r\n              <Route\r\n                path=\"/admin\"\r\n                component={this.state.user === 0 ? Admin : Unauthorized}\r\n                exact\r\n              />\r\n              <Route\r\n                path=\"/company\"\r\n                component={this.state.user === 1 ? Company : Unauthorized}\r\n                exact\r\n              />\r\n              <Route\r\n                path=\"/customer\"\r\n                component={this.state.user === 2 ? Customer : Unauthorized}\r\n                exact\r\n              />\r\n              <Redirect from=\"/\" to=\"/login\" />\r\n            </Switch>\r\n          </main>\r\n          <footer>\r\n            <Footer />\r\n          </footer>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Layout from \"./Components/LayoutArea/Layout\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Layout />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}