{"version":3,"sources":["Components/UI/CouponsTable.module.css","Components/LayoutArea/Header/Header.tsx","Components/LayoutArea/Footer/Footer.tsx","Services/Globals.ts","Redux/actionTypes.ts","Redux/actions.ts","Components/UI/Spinner/Spinner.tsx","Components/MainArea/Login/Login.tsx","Components/UI/CompanyTable.tsx","Models/CompanyModel.ts","Components/MainArea/AdminArea/AddCompany/AddCompany.tsx","Components/UI/CustomerTable.tsx","Models/CustomerModel.ts","Components/MainArea/AdminArea/AddCustomer/AddCustomer.tsx","Components/MainArea/AdminArea/DeleteCompany/DeleteCompany.tsx","Components/MainArea/AdminArea/DeleteCustomer/DeleteCustomer.tsx","Components/MainArea/AdminArea/UpdateCompany/UpdateCompany.tsx","Components/MainArea/AdminArea/UpdateCustomer/UpdateCustomer.tsx","Components/MainArea/AdminArea/GetAllCompanies/GetAllCompanies.tsx","Components/MainArea/AdminArea/GetAllCustomers/GetAllCustomers.tsx","Components/UI/CouponsTable.tsx","Components/MainArea/AdminArea/GetCompany/GetCompany.tsx","Components/MainArea/AdminArea/GetCustomer/GetCustomer.tsx","Components/MainArea/AdminArea/Admin/Admin.tsx","Components/UI/CouponTable.tsx","Models/CouponModel.ts","Components/MainArea/CompanyArea/AddCoupon/AddCoupon.tsx","Components/MainArea/CompanyArea/DeleteCoupon/DeleteCoupon.tsx","Components/MainArea/CompanyArea/UpdateCoupon/UpdateCoupon.tsx","Components/MainArea/CompanyArea/GetCompanyCouponsByCategoryId/GetCompanyCouponsByCategory.tsx","Components/MainArea/CompanyArea/GetCompanyCoupons/GetCompanyCoupons.tsx","Components/MainArea/CompanyArea/GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice.tsx","Components/MainArea/CompanyArea/GetCompanyDetails/GetCompanyDetails.tsx","Components/MainArea/CompanyArea/Company/Company.tsx","Components/MainArea/CustomerArea/PurchaseCoupon/PurchaseCoupon.tsx","Components/MainArea/CustomerArea/GetCustomerCoupons/GetCustomerCoupons.tsx","Components/MainArea/CustomerArea/GetCustomerCouponsByCategory/GetCustomerCouponsByCategory.tsx","Components/MainArea/CustomerArea/GetCustomerCouponsByMaxPrice/GetCustomerCouponsByMaxPrice.tsx","Components/MainArea/CustomerArea/GetCustomerDetails/GetCustomerDetails.tsx","Components/MainArea/CustomerArea/Cusotmer/Customer.tsx","Components/LayoutArea/Layout.tsx","reportWebVitals.ts","Redux/reducers/sessionReducer.ts","index.tsx"],"names":["module","exports","Header","className","Footer","Globals","globals","urls","products","productImages","localUrl","SET_SESSION","setSession","session","type","spinner","Login","useState","loading","setLoading","dispatch","useDispatch","history","useHistory","userT","useSelector","state","userType","loginView","Form","id","onSubmit","e","preventDefault","formData","FormData","document","querySelector","password","get","email","parseInt","axios","post","then","response","actions","token","data","catch","error","console","log","alert","Group","Label","Control","name","required","placeholder","as","value","Button","push","CompanyTable","props","err","message","fetchedCompany","title","Table","CompanyModel","coupons","AddCompany","setFetchedCompany","setErr","company","headers","CustomerTable","fetchedCustomer","first_name","last_name","CustomerModel","AddCustomer","fetchedData","setFetchedData","customer","DeleteCompany","delete","DeleteCustomerForm","setFetchedCustomer","UpdateCompany","fetchedUpdate","setFetchedUpdate","defaultValue","variant","onClick","companyId","getElementById","reset","disabled","UpdateCustomer","customerId","GetAllCompanies","st","setSt","useEffect","map","index","GetAllCustomers","CouponsTable","fetchedCoupons","classes","tableDiv","h3Div","tableRow","coupon","categoryId","description","startDate","endDate","amount","price","image","showTitleWhenEmpty","GetCompany","setFetchedCoupons","GetCustomer","Admin","subForm","subFormState","setSubFormState","replace","onChange","event","target","CouponTable","CouponModel","customers","AddCoupon","sentCoupon","Date","parseFloat","min","max","DeleteCoupon","UpdateCoupon","fetchedCoupon","setFetchedCoupon","cId","toString","GetCompanyCouponsByCategoryId","GetCompanyCoupons","GetCompanyCouponsByMaxPrice","mPrice","GetCompanyDetails","cm","setCm","Company","GetCompanyCouponsByCategory","PurchaseCoupon","resState","cp","setCp","Object","keys","length","couponId","GetCustomerCoupons","GetCustomerCouponsByCategory","GetCustomerCouponsByMaxPrice","GetCustomerDetails","Customer","Layout","user","guard","childComponent","path","component","exact","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","sessionReducer","action","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cd0e0bc0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"divClass\":\"CouponsTable_divClass__1-rKI\",\"tableDiv\":\"CouponsTable_tableDiv__33Ec3\",\"h3Div\":\"CouponsTable_h3Div__gaWCC\",\"tableRow\":\"CouponsTable_tableRow__DvzVy\"};","import \"./Header.css\";\r\n\r\nfunction Header(): JSX.Element {\r\n  return (\r\n    <div className=\"Header\">\r\n      <h3>COUPON PROJECT</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer(): JSX.Element {\r\n    return (\r\n        <div className=\"Footer\">\r\n\t\t\t<p>All rights reserved to Asher Plotnik ©</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","// Global settings which are the same for development and production: \r\nclass Globals {\r\n}\r\n\r\n// Global settings which are suitable only for development:\r\nclass DevelopmentGlobals extends Globals {\r\n    public urls = {\r\n        products: \"http://localhost:8080/api/products/\",\r\n        productImages: \"http://localhost:8080/api/products/images/\",\r\n        localUrl : \"http://localhost\"\r\n    };\r\n}\r\n\r\n// Global settings which are suitable only for production:\r\nclass ProductionGlobals extends Globals {\r\n    public urls = {\r\n        products: \"http://localhost:3030/api/products/\", // In real life there will be the production address\r\n        productImages: \"http://localhost:3030/api/products/images/\", // In real life there will be the production address\r\n        localUrl : \"http://localhost\"\r\n    };\r\n}\r\n\r\n// Creating the correct object\r\nconst globals = process.env.NODE_ENV === \"development\" ? new DevelopmentGlobals() : new ProductionGlobals();\r\n\r\nexport default globals;\r\n","export const SET_SESSION = \"SET_SESSION\";","import { SET_SESSION } from \"./actionTypes\";\r\n\r\nexport const setSession = (session : ISession)=> ({\r\n  type: SET_SESSION,\r\n  session\r\n});\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\nconst spinner = () => <div className=\"SpinnerLoader\">Loading...</div>;\r\n\r\nexport default spinner;\r\n","import \"./Login.css\";\r\nimport axios from \"axios\";\r\n//import { localUrl } from \"../../helper\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as actions from \"../../../Redux/actions\";\r\nimport { useState } from \"react\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nfunction Login(): JSX.Element {\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const fetchLogin = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#loginForm\") as HTMLFormElement\r\n    );\r\n    const password = formData.get(\"password\");\r\n    const email = formData.get(\"email\");\r\n    const userType = parseInt(formData.get(\"userType\") as string);\r\n    setLoading(true);\r\n    axios\r\n      .post(globals.urls.localUrl + `:8080//login/${email}/${userType}`, {\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        dispatch(\r\n          actions.setSession({\r\n            token: response.data as string,\r\n            userType: userType,\r\n          })\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.log(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  let userT = useSelector<SessionState, any>((state) => state.session.userType);\r\n  let loginView = <Spinner />;\r\n  if (!loading) {\r\n    loginView = (\r\n      <div className=\"Login\">\r\n        <div className=\"wrapperDiv\">\r\n          <h3>COUPONS API</h3>\r\n          <Form className=\"ulForm\" id=\"loginForm\" onSubmit={fetchLogin}>\r\n            <Form.Group>\r\n              <Form.Label>Email :</Form.Label>\r\n              <Form.Control\r\n                // type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                required\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password:</Form.Label>\r\n              <Form.Control\r\n                id=\"password\"\r\n                name=\"password\"\r\n                required\r\n                // type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>User type:</Form.Label>\r\n              <Form.Control as=\"select\" id=\"userType\" name=\"userType\" required>\r\n                <option value=\"0\">ADMIN</option>\r\n                <option value=\"1\">COMPANY</option>\r\n                <option value=\"2\">CUSTOMER</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Button id=\"submitButton\" type=\"submit\">\r\n              SUBMIT\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n      // </div>\r\n    );\r\n  }\r\n  console.log(userT);\r\n  switch (userT) {\r\n    case 0:\r\n      history.push(\"/admin\");\r\n      break;\r\n    case 1:\r\n      history.push(\"/company\");\r\n      break;\r\n    case 2:\r\n      history.push(\"/customer\");\r\n      break;\r\n    default:\r\n  }\r\n  return loginView;\r\n}\r\n\r\nexport default Login;\r\n","import \"./CompanyTable.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport CompanyModel from \"../../Models/CompanyModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\n\r\ninterface CtProps {\r\n  title: string;\r\n  data: CompanyModel;\r\n  err?: ErrorModel;\r\n}\r\n\r\nconst CompanyTable = (props: CtProps) => {\r\n  console.log(props.err && props.err.response.data.message);\r\n  let fetchedCompany = props.data;\r\n  if (fetchedCompany) {\r\n    return (\r\n      <div className=\"CompanyTable\">\r\n        <div className=\"h3Div\">\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Password</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>{fetchedCompany.id}</td>\r\n              <td>{fetchedCompany.name}</td>\r\n              <td>{fetchedCompany.email}</td>\r\n              <td>{fetchedCompany.password}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className=\"h3Div\">\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default CompanyTable;\r\n","import CouponModel from \"./CouponModel\";\r\n\r\nclass CompanyModel {\r\n    public id:number=0;\r\n    public name:string=\"\";\r\n    public email:string=\"\";\r\n    public password:string=\"\";\r\n    public coupons:CouponModel[];\r\n}\r\n\r\nexport default CompanyModel;","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./AddCompany.css\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface AcProps {\r\n  token: string;\r\n}\r\n\r\nfunction AddCompany(props: AcProps) {\r\n  const token = props.token;\r\n  let [fetchedCompany, setFetchedCompany] = useState<CompanyModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const addCompanyHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#addCompanyForm\"));\r\n    console.log(formData.get(\"username\"));\r\n    let company: CompanyModel = new CompanyModel();\r\n    company.id = 0;\r\n    company.name = formData.get(\"username\") as string;\r\n    company.email = formData.get(\"email\") as string;\r\n    company.password = formData.get(\"password\") as string;\r\n\r\n    axios\r\n      .post(globals.urls.localUrl + \":8080//api/admin/addCompany\", company, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCompany(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCompany\">\r\n      <h3 className=\"h3Div\">Add Company</h3>\r\n      <Form id=\"addCompanyForm\" onSubmit={addCompanyHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>Name: </Form.Label>\r\n            <Form.Control name=\"username\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control name=\"email\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control name=\"password\" />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CompanyTable\r\n        err={err}\r\n        data={fetchedCompany}\r\n        title=\"COMPANY ADDED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCompany;\r\n","import \"./CustomerTable.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CustomerModel from \"../../Models/CustomerModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\n\r\ninterface CtProps {\r\n  title: string;\r\n  data: CustomerModel;\r\n  err?: ErrorModel;\r\n}\r\n\r\nconst CustomerTable = (props: CtProps) => {\r\n  console.log(props.err && props.err.response.data.message);\r\n  let fetchedCustomer = props.data;\r\n  if (fetchedCustomer) {\r\n    return (\r\n      <div>\r\n        <div className=\"CustomerTable\">\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>ID</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Password</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>{fetchedCustomer.id}</td>\r\n              <td>{fetchedCustomer.first_name}</td>\r\n              <td>{fetchedCustomer.last_name}</td>\r\n              <td>{fetchedCustomer.email}</td>\r\n              <td>{fetchedCustomer.password}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className=\"CustomerTable\">\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default CustomerTable;\r\n","import CouponModel from \"./CouponModel\";\r\n\r\nclass CustomerModel {\r\n    public id:number;\r\n    public first_name:string;\r\n    public last_name:string;\r\n    public email:string;\r\n    public password:string;\r\n    public coupons:CouponModel[];\r\n\r\n}\r\n\r\nexport default CustomerModel;\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./AddCustomer.css\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface AcProps {\r\n  token: string;\r\n}\r\n\r\nfunction AddCustomer(props: AcProps) {\r\n  const token = props.token;\r\n  let [fetchedData, setFetchedData] = useState<CustomerModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const addCustomerHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#addCustomerForm\"));\r\n    let customer: CustomerModel = new CustomerModel();\r\n    customer.id = 0;\r\n    customer.last_name = formData.get(\"lastname\") as string;\r\n    customer.first_name = formData.get(\"firstname\") as string;\r\n    customer.email = formData.get(\"email\") as string;\r\n    customer.password = formData.get(\"password\") as string;\r\n    axios\r\n      .post(globals.urls.localUrl + \":8080//api/admin/addCustomer\", customer, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCustomer\">\r\n      <h3 className=\"h3Div\">Add Customer</h3>\r\n      <Form id=\"addCustomerForm\" onSubmit={addCustomerHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>First Name: </Form.Label>\r\n            <Form.Control name=\"firstname\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Name: </Form.Label>\r\n            <Form.Control name=\"lastname\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control name=\"email\" />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control name=\"password\" />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CustomerTable\r\n        err={err}\r\n        data={fetchedData}\r\n        title=\"CUSTOMER ADDED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCustomer;\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./DeleteCompany.css\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\ninterface DcProps {\r\n  token: string;\r\n}\r\n\r\nfunction DeleteCompany(props: DcProps) {\r\n  const token = props.token;\r\n  let [fetchedCompany, setFetchedCompany] = useState(null);\r\n  let [err, setErr] = useState(null);\r\n  const deleteCompanyHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#deleteCompanyForm\"));\r\n    const id = parseInt(formData.get(\"id\") as string);\r\n    setFetchedCompany(null);\r\n    axios\r\n      .delete(globals.urls.localUrl + \":8080//api/admin/deleteCompany/\" + id, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCompany(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"DeleteCompany\">\r\n      <h3 className=\"h3Div\">Delete Company</h3>\r\n      <Form id=\"deleteCompanyForm\" onSubmit={deleteCompanyHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>ID to delete: </Form.Label>\r\n            <Form.Control name=\"id\" /> <Button type=\"submit\">SUBMIT</Button>\r\n          </Form.Group>\r\n        </div>\r\n      </Form>\r\n      <CompanyTable\r\n        err={err}\r\n        data={fetchedCompany}\r\n        title=\"COMPANY DELETED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteCompany;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./DeleteCustomer.css\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\ninterface DcProps {\r\n  token: string;\r\n}\r\n\r\nfunction DeleteCustomerForm(props: DcProps) {\r\n  const token = props.token;\r\n  let [fetchedCustomer, setFetchedCustomer] = useState(null);\r\n  let [err, setErr] = useState(null);\r\n  const deleteCustomerHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#deleteCustomerForm\")\r\n    );\r\n    const id = parseInt(formData.get(\"id\") as string);\r\n    setFetchedCustomer(null);\r\n    axios\r\n      .delete(globals.urls.localUrl + \":8080//api/admin/deleteCustomer/\" + id, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCustomer(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"DeleteCustomer\">\r\n      <h3 className=\"h3Div\">Delete customer</h3>\r\n      <Form id=\"deleteCustomerForm\" onSubmit={deleteCustomerHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>ID to delete: </Form.Label>\r\n            <Form.Control name=\"id\" /> <Button type=\"submit\">SUBMIT</Button>\r\n          </Form.Group>\r\n        </div>\r\n      </Form>\r\n      <CustomerTable\r\n        err={err}\r\n        data={fetchedCustomer}\r\n        title=\"CUSTOMER DELETED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteCustomerForm;\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./UpdateCompany.css\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface UcProps {\r\n  token: string;\r\n}\r\n\r\nfunction UpdateCompany(props: UcProps) {\r\n  const token = props.token;\r\n  const [fetchedCompany, setFetchedCompany] = useState<CompanyModel>(null);\r\n  const [fetchedUpdate, setFetchedUpdate] = useState<CompanyModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const updateCompanyHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#updateCompanyForm\"));\r\n    let company: CompanyModel;\r\n    company.id = fetchedUpdate.id;\r\n    company.email = formData.get(\"email\") as string;\r\n    company.password = formData.get(\"password\") as string;\r\n    company.name = (document.querySelector(\r\n      \"#companyName\"\r\n    ) as HTMLInputElement).value;\r\n    axios\r\n      .post(globals.urls.localUrl + \":8080//api/admin/updateCompany\", company, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCompany(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  const fetchCompanyByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const companyId = parseInt(\r\n      (document.querySelector(\"#companyId\") as HTMLInputElement).value\r\n    );\r\n    setFetchedCompany(null);\r\n    setFetchedUpdate(null);\r\n    setErr(null);\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getCompany/\" + companyId, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        console.log(response.data);\r\n        (document.getElementById(\r\n          \"updateCompanyForm\"\r\n        ) as HTMLFormElement).reset();\r\n        setFetchedUpdate(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        (document.getElementById(\r\n          \"updateCompanyForm\"\r\n        ) as HTMLFormElement).reset();\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"UpdateCompany\">\r\n      <h3 className=\"h3Div\">Update Company</h3>\r\n      <Form id=\"updateCompanyForm\" onSubmit={updateCompanyHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>ID: </Form.Label>\r\n            <Form.Control\r\n              required\r\n              id=\"companyId\"\r\n              name=\"companyId\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.id}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"secondary\"\r\n            id=\"fetch\"\r\n            onClick={fetchCompanyByIdHandler}\r\n          >\r\n            FETCH\r\n          </Button>\r\n          <Form.Group>\r\n            <Form.Label>Name: </Form.Label>\r\n            <Form.Control\r\n              name=\"companyName\"\r\n              id=\"companyName\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.name}\r\n              disabled={true}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control\r\n              name=\"email\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.email}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.password}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CompanyTable\r\n        err={err}\r\n        data={fetchedCompany}\r\n        title=\"COMPANY UPDATED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateCompany;\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport \"./UpdateCustomer.css\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface UcProps {\r\n  token: string;\r\n}\r\n\r\nfunction UpdateCustomer(props: UcProps) {\r\n  const token = props.token;\r\n  let [fetchedCustomer, setFetchedCustomer] = useState<CustomerModel>(null);\r\n  let [fetchedData, setFetchedData] = useState<CustomerModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const updateCustomerHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#updateCustomerForm\")\r\n    );\r\n    let customer: CustomerModel = new CustomerModel();\r\n    customer.id = fetchedCustomer.id;\r\n    customer.email = formData.get(\"email\") as string;\r\n    customer.password = formData.get(\"password\") as string;\r\n    customer.first_name = formData.get(\"firstName\") as string;\r\n    customer.last_name = formData.get(\"lastName\") as string;\r\n    axios\r\n      .post(\r\n        globals.urls.localUrl + \":8080//api/admin/updateCustomer\",\r\n        customer,\r\n        { headers: { token: token } }\r\n      )\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n  const fetchCustomerByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const customerId = parseInt(\r\n      (document.querySelector(\"#customerId\") as HTMLInputElement).value\r\n    );\r\n    setFetchedData(null);\r\n    setFetchedCustomer(null);\r\n    setErr(null);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl + \":8080//api/admin/getCustomer/\" + customerId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        (document.getElementById(\r\n          \"updateCustomerForm\"\r\n        ) as HTMLFormElement).reset();\r\n        setFetchedCustomer(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        (document.getElementById(\r\n          \"updateCustomerForm\"\r\n        ) as HTMLFormElement).reset();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"UpdateCustomer\">\r\n      <h3 className=\"h3Div\">Update Customer</h3>\r\n      <Form id=\"updateCustomerForm\" onSubmit={updateCustomerHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>ID: </Form.Label>\r\n            <Form.Control\r\n              required\r\n              id=\"customerId\"\r\n              name=\"customerId\"\r\n              defaultValue={fetchedCustomer && fetchedCustomer.id}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"secondary\"\r\n            id=\"fetch\"\r\n            onClick={fetchCustomerByIdHandler}\r\n          >\r\n            FETCH\r\n          </Button>\r\n          <Form.Group>\r\n            <Form.Label>First Name: </Form.Label>\r\n            <Form.Control\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              defaultValue={fetchedCustomer && fetchedCustomer.first_name}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Last Name: </Form.Label>\r\n            <Form.Control\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              defaultValue={fetchedCustomer && fetchedCustomer.last_name}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control\r\n              name=\"email\"\r\n              defaultValue={fetchedCustomer && fetchedCustomer.email}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              defaultValue={fetchedCustomer && fetchedCustomer.password}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CustomerTable\r\n        err={err}\r\n        data={fetchedData}\r\n        title=\"CUSTOMER UPDATED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateCustomer;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./GetAllCompanies.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetAllCompanies = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get<CompanyModel[]>(\r\n        globals.urls.localUrl + \":8080//api/admin/getAllCompanies\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(\r\n          <div>\r\n            <h3>Companies List</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr key=\"-1\">\r\n                  <th>#</th>\r\n                  <th>ID</th>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Password</th>\r\n                </tr>\r\n              </thead>{\" \"}\r\n              <tbody>\r\n                {response.data.map((company, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{company.id}</td>\r\n                    <td>{company.name}</td>\r\n                    <td>{company.email}</td>\r\n                    <td>{company.password}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n  return <div className=\"GetAllCompanies\">{st}</div>;\r\n};\r\nexport default GetAllCompanies;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"./GetAllCustomers.css\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\nconst GetAllCustomers = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get<CustomerModel[]>(\r\n        globals.urls.localUrl + \":8080//api/admin/getAllCustomers\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(\r\n          <div>\r\n            <h3 className=\"GetAllCustomers\">Customers List</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr key=\"-1\">\r\n                  <th>#</th>\r\n                  <th>ID</th>\r\n                  <th>First Name</th>\r\n                  <th>Last Name</th>\r\n                  <th>Email</th>\r\n                  <th>Password</th>\r\n                </tr>\r\n              </thead>{\" \"}\r\n              <tbody>\r\n                {response.data.map((customer, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{customer.id}</td>\r\n                    <td>{customer.first_name}</td>\r\n                    <td>{customer.last_name}</td>\r\n                    <td>{customer.email}</td>\r\n                    <td>{customer.password}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n  return <div>{st}</div>;\r\n};\r\nexport default GetAllCustomers;\r\n","import classes from \"./CouponsTable.module.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport CouponModel from \"../../Models/CouponModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\n\r\ninterface CpProps {\r\n  data: CouponModel[];\r\n  title: string;\r\n  showTitleWhenEmpty?: boolean;\r\n  err?: ErrorModel;\r\n}\r\n\r\nconst CouponsTable = (props: CpProps) => {\r\n  let fetchedCoupons = props.data;\r\n  if (fetchedCoupons) {\r\n    return (\r\n      <div className={classes.tableDiv}>\r\n        <div className={classes.h3Div}>\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr className={classes.tableRow}>\r\n              <th>ID</th>\r\n              <th>Category ID</th>\r\n              <th>Company ID</th>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Amount</th>\r\n              <th>Price</th>\r\n              <th>Image</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {fetchedCoupons.map((coupon, index) => (\r\n              <tr key={index} className={classes.tableRow}>\r\n                <td>{coupon.id}</td>\r\n                <td>{coupon.categoryId}</td>\r\n                <td>{coupon.company.id}</td>\r\n                <td>{coupon.title}</td>\r\n                <td>{coupon.description}</td>\r\n                <td>{coupon.startDate}</td>\r\n                <td>{coupon.endDate}</td>\r\n                <td>{coupon.amount}</td>\r\n                <td>{coupon.price}</td>\r\n                <td>{coupon.image}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className={classes.h3Div}>\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (props.showTitleWhenEmpty === true) {\r\n        return <h3 className=\"h3Div\"> {props.title} </h3>;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default CouponsTable;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./GetCompany.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompany = (props: GcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCompany, setFetchedCompany] = useState<CompanyModel>(null);\r\n  let [fetchedCoupons, setFetchedCoupons] = useState<CouponModel[]>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCompanyByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#getCompanyForm\"));\r\n    const companyId = parseInt(formData.get(\"companyId\") as string);\r\n    setFetchedCompany(null);\r\n    setFetchedCoupons(null);\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/admin/getCompany/\" + companyId, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCompany(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/admin/getCompanyCoupons/\" +\r\n          companyId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setFetchedCoupons(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"GetCompany\">\r\n      <h3 className=\"h3Div\">Get Company details</h3>\r\n      <Form id=\"getCompanyForm\" onSubmit={fetchCompanyByIdHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>ID: </Form.Label>\r\n            <Form.Control id=\"companyId\" name=\"companyId\" type=\"number\" />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">FETCH</Button>\r\n      </Form>\r\n      <div>\r\n        {fetchedCompany && (\r\n          <CompanyTable\r\n            err={err}\r\n            data={fetchedCompany}\r\n            title={fetchedCompany.name}\r\n          />\r\n        )}\r\n        {fetchedCoupons && (\r\n          <CouponsTable data={fetchedCoupons} title=\"Company's Coupons\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompany;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./GetCustomer.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomer = (props: GcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCustomer, setFetchedCustomer] = useState<CustomerModel>(null);\r\n  let [fetchedCoupons, setFetchedCoupons] = useState<CouponModel[]>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCustomerByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#getCustomerForm\"));\r\n    const customerId = parseInt(formData.get(\"customerId\") as string);\r\n    setFetchedCustomer(null);\r\n    setFetchedCoupons(null);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl + \":8080//api/admin/getCustomer/\" + customerId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setFetchedCustomer(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/admin/getCustomerCoupons/\" +\r\n          customerId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setFetchedCoupons(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"GetCustomer\">\r\n      <Form id=\"getCustomerForm\" onSubmit={fetchCustomerByIdHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>ID: </Form.Label>\r\n            <Form.Control id=\"customerId\" name=\"customerId\" type=\"number\" />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">FETCH</Button>\r\n      </Form>\r\n      <div>\r\n        {fetchedCustomer && (\r\n          <CustomerTable\r\n            err={err}\r\n            data={fetchedCustomer}\r\n            title={fetchedCustomer.first_name + \" \" + fetchedCustomer.last_name}\r\n          />\r\n        )}\r\n        {fetchedCoupons && (\r\n          <CouponsTable data={fetchedCoupons} title=\"Customer's Coupons\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomer;\r\n","import \"./Admin.css\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../../../Redux/actions\";\r\nimport AddCompany from \"../AddCompany/AddCompany\";\r\nimport AddCustomer from \"../AddCustomer/AddCustomer\";\r\nimport DeleteCompany from \"../DeleteCompany/DeleteCompany\";\r\nimport DeleteCustomer from \"../DeleteCustomer/DeleteCustomer\";\r\nimport UpdateCompany from \"../UpdateCompany/UpdateCompany\";\r\nimport UpdateCustomer from \"../UpdateCustomer/UpdateCustomer\";\r\nimport GetAllCompanies from \"../GetAllCompanies/GetAllCompanies\";\r\nimport GetAllCustomers from \"../GetAllCustomers/GetAllCustomers\";\r\nimport GetCompany from \"../GetCompany/GetCompany\";\r\nimport GetCustomer from \"../GetCustomer/GetCustomer\";\r\nimport Form from \"react-bootstrap/Form\";\r\nfunction Admin() {\r\n  const [subFormState, setSubFormState] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  let token = useSelector<SessionState, any>((state) => state.session.token);\r\n  const actionSelector = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSubFormState(parseInt(event.target.value as string));\r\n  };\r\n  let subForm: JSX.Element;\r\n  switch (subFormState) {\r\n    case 1:\r\n      subForm = <AddCompany token={token} />;\r\n      break;\r\n    case 2:\r\n      subForm = <DeleteCompany token={token} />;\r\n      break;\r\n    case 3:\r\n      subForm = <UpdateCompany token={token} />;\r\n      break;\r\n    case 4:\r\n      subForm = <GetCompany token={token} />;\r\n      break;\r\n    case 5:\r\n      subForm = <GetAllCompanies token={token} />;\r\n      break;\r\n    case 6:\r\n      subForm = <AddCustomer token={token} />;\r\n      break;\r\n    case 7:\r\n      subForm = <DeleteCustomer token={token} />;\r\n      break;\r\n    case 8:\r\n      subForm = <UpdateCustomer token={token} />;\r\n      break;\r\n    case 9:\r\n      subForm = <GetCustomer token={token} />;\r\n      break;\r\n    case 10:\r\n      subForm = <GetAllCustomers token={token} />;\r\n      break;\r\n    case 11:\r\n      dispatch(actions.setSession({ token: \"\", userType: -1 }));\r\n      history.replace(\"/login\");\r\n      break;\r\n    default:\r\n      subForm = <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"h2\">Admin Menu</h2>\r\n      <div className=\"Admin\">\r\n        <Form id=\"actionForm\">\r\n          <Form.Group>\r\n            <Form.Label>Choose Action: </Form.Label>\r\n            <Form.Control\r\n              onChange={actionSelector}\r\n              name=\"action\"\r\n              as=\"select\"\r\n              id=\"actionSelect\"\r\n            >\r\n              <option value=\"\">-- choose one --</option>\r\n              <option value=\"1\"> add new company</option>\r\n              <option value=\"2\"> delete company</option>\r\n              <option value=\"3\"> update company details</option>\r\n              <option value=\"4\"> get company details</option>\r\n              <option value=\"5\"> get all companies</option>\r\n              <option value=\"6\"> add customer</option>\r\n              <option value=\"7\"> delete customer</option>\r\n              <option value=\"8\"> update customer details</option>\r\n              <option value=\"9\"> get customer details</option>\r\n              <option value=\"10\"> get all customers</option>\r\n              <option value=\"11\"> exit</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n      <div className=\"SubFormAdmin\">{subForm}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import classes from \"./CouponsTable.module.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport CouponModel from \"../../Models/CouponModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\n\r\ninterface CtProps {\r\n  title: string;\r\n  data: CouponModel;\r\n  err?: ErrorModel;\r\n}\r\n\r\nconst CouponTable = (props: CtProps) => {\r\n  let coupon = props.data;\r\n  if (coupon) {\r\n    return (\r\n      <div className={classes.tableDiv}>\r\n        <div className={classes.h3Div}>\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr className={classes.tableRow}>\r\n              <th>ID</th>\r\n              <th>Category ID</th>\r\n              <th>Company ID</th>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Amount</th>\r\n              <th>Price</th>\r\n              <th>Image</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className={classes.tableRow}>\r\n              <td>{coupon.id}</td>\r\n              <td>{coupon.categoryId}</td>\r\n              <td>{coupon.company.id}</td>\r\n              <td>{coupon.title}</td>\r\n              <td>{coupon.description}</td>\r\n              <td>{coupon.startDate}</td>\r\n              <td>{coupon.endDate}</td>\r\n              <td>{coupon.amount}</td>\r\n              <td>{coupon.price}</td>\r\n              <td>{coupon.image}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className={classes.h3Div}>\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default CouponTable;\r\n","import CompanyModel from \"./CompanyModel\";\r\nimport CustomerModel from \"./CustomerModel\";\r\n\r\nclass CouponModel {\r\n   \r\n    public id:number;\r\n    public title:string;\r\n    public categoryId:number;\r\n    public description:string;\r\n    public startDate:Date;\r\n    public endDate:Date;\r\n    public amount:number;\r\n    public price:number;\r\n    public image:string;\r\n    public company:CompanyModel;\r\n    public customers:CustomerModel[];\r\n}\r\n\r\nexport default CouponModel;\r\n\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./AddCoupon.css\";\r\nimport CouponTable from \"../../../UI/CouponTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface AcProps {\r\n  token: string;\r\n}\r\n\r\nconst AddCoupon = (props: AcProps) => {\r\n  const token = props.token;\r\n  let [fetchedData, setFetchedData] = useState<CouponModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const addCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#addCouponForm\"));\r\n    let sentCoupon: CouponModel = new CouponModel();\r\n    sentCoupon.categoryId = parseInt(formData.get(\"categoryId\") as string);\r\n    sentCoupon.title = formData.get(\"title\") as string;\r\n    sentCoupon.description = formData.get(\"description\") as string;\r\n    sentCoupon.startDate = new Date(formData.get(\"startDate\") as string);\r\n    sentCoupon.endDate = new Date(formData.get(\"endDate\") as string);\r\n    sentCoupon.amount = parseInt(formData.get(\"amount\") as string);\r\n    sentCoupon.price = parseFloat(formData.get(\"price\") as string);\r\n    sentCoupon.image = formData.get(\"image\") as string;\r\n\r\n    axios\r\n      .post(\r\n        globals.urls.localUrl + \":8080//api/company/addCoupon\",\r\n        sentCoupon,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCoupon\">\r\n      <h3 className=\"h3Div\">Add Coupon</h3>\r\n      <Form id=\"addCouponForm\" onSubmit={addCouponHandler}>\r\n        <div className=\"AddCouponFormDiv\">\r\n          <div className=\"AddCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>Category ID: </Form.Label>\r\n              <Form.Control\r\n                name=\"categoryId\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"5\"\r\n                className=\"FormEl\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Title: </Form.Label>\r\n              <Form.Control name=\"title\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Start date: </Form.Label>\r\n              <Form.Control type=\"date\" name=\"startDate\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>End date: </Form.Label>\r\n              <Form.Control type=\"date\" name=\"endDate\" />\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"AddCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>Description: </Form.Label>\r\n              <Form.Control name=\"description\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Amount: </Form.Label>\r\n              <Form.Control name=\"amount\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Price: </Form.Label>\r\n              <Form.Control name=\"price\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Image: </Form.Label>\r\n              <Form.Control name=\"image\" />\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <div>\r\n        <CouponTable\r\n          err={err}\r\n          data={fetchedData}\r\n          title=\"COUPON ADDED SUCCESSFULLY\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCoupon;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./DeleteCoupon.css\";\r\nimport CouponTable from \"../../../UI/CouponTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface DcProps {\r\n  token: string;\r\n}\r\n\r\nconst DeleteCoupon = (props: DcProps) => {\r\n  const token = props.token;\r\n  let [fetchedData, setFetchedData] = useState<CouponModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const deleteCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#deleteCouponForm\"));\r\n    const id = parseInt(formData.get(\"id\") as string);\r\n    axios\r\n      .delete(globals.urls.localUrl + \":8080//api/company/deleteCoupon/\" + id, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"DeleteCoupon\">\r\n      <h3 className=\"h3Div\">Delete Coupon</h3>\r\n      <Form id=\"deleteCouponForm\" onSubmit={deleteCouponHandler}>\r\n        <Form.Group>\r\n          <Form.Label>ID to delete: </Form.Label>\r\n          <Form.Control name=\"id\" /> <Button type=\"submit\">SUBMIT</Button>\r\n        </Form.Group>\r\n      </Form>\r\n      <CouponTable\r\n        err={err}\r\n        data={fetchedData}\r\n        title=\"COUPON DELETED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteCoupon;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./UpdateCoupon.css\";\r\nimport CouponTable from \"../../../UI/CouponTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface UcProps {\r\n  token: string;\r\n}\r\n\r\nconst UpdateCoupon = (props: UcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCoupon, setFetchedCoupon] = useState<CouponModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n\r\n  let [fetchedData, setFetchedData] = useState<CouponModel>(null);\r\n  const updateCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    let sentCoupon: CouponModel = new CouponModel();\r\n    const formData = new FormData(document.querySelector(\"#updateCouponForm\"));\r\n    sentCoupon.id = fetchedCoupon.id;\r\n    sentCoupon.categoryId = parseInt(formData.get(\"categoryId\") as string);\r\n    sentCoupon.title = formData.get(\"title\") as string;\r\n    sentCoupon.description = formData.get(\"description\") as string;\r\n    sentCoupon.startDate = new Date(formData.get(\"startDate\") as string);\r\n    sentCoupon.endDate = new Date(formData.get(\"endDate\") as string);\r\n    sentCoupon.amount = parseInt(formData.get(\"amount\") as string);\r\n    sentCoupon.price = parseFloat(formData.get(\"price\") as string);\r\n    sentCoupon.image = formData.get(\"image\") as string;\r\n\r\n    axios\r\n      .post(\r\n        globals.urls.localUrl + \":8080//api/company/updateCoupon\",\r\n        sentCoupon,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n  const fetchCouponByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const cId = parseInt(\r\n      (document.querySelector(\"#couponId\") as HTMLInputElement).value\r\n    );\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/company/getCompanyCouponById/\" +\r\n          cId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        (document.getElementById(\r\n          \"updateCouponForm\"\r\n        ) as HTMLFormElement).reset();\r\n        setFetchedCoupon(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        (document.getElementById(\r\n          \"updateCouponForm\"\r\n        ) as HTMLFormElement).reset();\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"UpdateCouponWrapper\">\r\n      <h3 className=\"h3Div\">Update Coupon</h3>\r\n      <Form id=\"updateCouponForm\" onSubmit={updateCouponHandler}>\r\n        <Form.Group>\r\n          <Form.Label>ID: </Form.Label>\r\n          <Form.Control\r\n            id=\"couponId\"\r\n            name=\"couponId\"\r\n            defaultValue={fetchedCoupon && fetchedCoupon.id}\r\n          />\r\n        </Form.Group>\r\n        <Button id=\"fetch\" onClick={fetchCouponByIdHandler}>\r\n          FETCH\r\n        </Button>\r\n        <div className=\"UpdateCouponFormDiv\">\r\n          <div className=\"UpdateCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>Category ID: </Form.Label>\r\n              <Form.Control\r\n                name=\"categoryId\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                max=\"5\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.categoryId}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Title: </Form.Label>\r\n              <Form.Control\r\n                name=\"title\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.title}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Description: </Form.Label>\r\n              <Form.Control\r\n                name=\"description\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.description}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Start date: </Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                defaultValue={\r\n                  fetchedCoupon && fetchedCoupon.startDate.toString()\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"UpdateCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>End date: </Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.endDate.toString()}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Amount: </Form.Label>\r\n              <Form.Control\r\n                name=\"amount\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.amount}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Price: </Form.Label>\r\n              <Form.Control\r\n                name=\"price\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.price}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Image: </Form.Label>\r\n              <Form.Control\r\n                name=\"image\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.image}\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <div>\r\n        <CouponTable\r\n          err={err}\r\n          data={fetchedData}\r\n          title=\"COUPON UPDATED SUCCESSFULLY\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateCoupon;\r\n","import axios from \"axios\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport \"./GetCompanyCouponsByCategoryId.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\ninterface GpProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyCouponsByCategoryId = (props: GpProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>([]);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByIdForm\")\r\n    );\r\n    const categoryId = parseInt(formData.get(\"categoryId\") as string);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/company//getCompanyCouponsByCategory/\" +\r\n          categoryId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"GetCompanyCouponsByCategoryId\">\r\n      <h3 className=\"h3Div\">Get Company coupons by category ID</h3>\r\n      <Form id=\"fetchCouponsByIdForm\" onSubmit={fetchCouponsHandler}>\r\n        <div className=\"innerFormDiv\">\r\n          <Form.Group>\r\n            <Form.Label>CATEGORY ID: </Form.Label>\r\n            <Form.Control id=\"categoryId\" name=\"categoryId\" />\r\n          </Form.Group>\r\n          <Button type=\"submit\">FETCH</Button>\r\n        </div>\r\n      </Form>\r\n      <CouponsTable err={err} data={st} title=\"Coupons list\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompanyCouponsByCategoryId;\r\n","import axios from \"axios\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCompanyCoupons.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyCoupons = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>([]);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/company/getCompanyCoupons\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"GetCompanyCoupons\">\r\n      <CouponsTable err={err} data={st} title=\"Coupons List\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompanyCoupons;\r\n","import axios from \"axios\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport \"./GetCompanyCouponsByMaxPrice.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GpProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyCouponsByMaxPrice = (props: GpProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>([]);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByPriceForm\")\r\n    );\r\n    const mPrice = parseFloat(formData.get(\"mPrice\") as string);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/company//getCompanyCouponsByMaxPrice/\" +\r\n          mPrice,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"GetCompanyCouponsByMaxPrice\">\r\n      <h3 className=\"h3Div\">Get Company coupons by Max Price</h3>\r\n      <Form id=\"fetchCouponsByPriceForm\" onSubmit={fetchCouponsHandler}>\r\n        <div className=\"innerFormDiv\">\r\n          <Form.Group>\r\n            <Form.Label>CATEGORY ID: </Form.Label>\r\n            <Form.Control id=\"mPrice\" name=\"mPrice\" />\r\n          </Form.Group>\r\n          <Button type=\"submit\">FETCH</Button>\r\n        </div>\r\n      </Form>\r\n      <CouponsTable err={err} data={st} title=\"Coupons List\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompanyCouponsByMaxPrice;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface CdProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyDetails = (props: CdProps) => {\r\n  const token = props.token;\r\n  const [cm, setCm] = useState<CompanyModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get<CompanyModel>(\r\n        globals.urls.localUrl + \":8080//api/company/getCompanyDetails\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setCm(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n  if (cm) {\r\n    return <CompanyTable err={err} data={cm} title={cm.name} />;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default GetCompanyDetails;\r\n","import { useState } from \"react\";\r\nimport \"./Company.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as actions from \"../../../../Redux/actions\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport AddCoupon from \"../AddCoupon/AddCoupon\";\r\nimport DeleteCoupon from \"../DeleteCoupon/DeleteCoupon\";\r\nimport UpdateCoupon from \"../UpdateCoupon/UpdateCoupon\";\r\nimport GetCompanyCouponsByCategoryId from \"../GetCompanyCouponsByCategoryId/GetCompanyCouponsByCategory\";\r\nimport GetCompanyCoupons from \"../GetCompanyCoupons/GetCompanyCoupons\";\r\nimport GetCompanyCouponsByMaxPrice from \"../GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice\";\r\nimport GetCompanyDetails from \"../GetCompanyDetails/GetCompanyDetails\";\r\n\r\nconst Company = (): JSX.Element => {\r\n  const actionSelector = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    event.preventDefault();\r\n    setSubFormState(parseInt(event.target.value as string));\r\n  };\r\n\r\n  const [subFormState, setSubFormState] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  let token = useSelector<SessionState, any>((state) => state.session.token);\r\n  let subForm: JSX.Element;\r\n  switch (subFormState) {\r\n    case 1:\r\n      subForm = <AddCoupon token={token} />;\r\n      break;\r\n    case 2:\r\n      subForm = <DeleteCoupon token={token} />;\r\n      break;\r\n    case 3:\r\n      subForm = <UpdateCoupon token={token} />;\r\n      break;\r\n    case 4:\r\n      subForm = <GetCompanyCoupons token={token} />;\r\n      break;\r\n    case 5:\r\n      subForm = <GetCompanyCouponsByCategoryId token={token} />;\r\n      break;\r\n    case 6:\r\n      subForm = <GetCompanyCouponsByMaxPrice token={token} />;\r\n      break;\r\n    case 7:\r\n      subForm = <GetCompanyDetails token={token} />;\r\n      break;\r\n    case 8:\r\n      dispatch(actions.setSession({ token: \"\", userType: -1 }));\r\n      history.replace(\"/login\");\r\n      break;\r\n    default:\r\n      subForm = <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Company\">\r\n      <h3>Company Menu</h3>\r\n      <div className=\"FormDiv\">\r\n        <Form id=\"actionForm\">\r\n          <div className=\"Field\">\r\n            <Form.Group>\r\n              <Form.Label>Choose Action: </Form.Label>\r\n              <Form.Control\r\n                onChange={actionSelector}\r\n                value={subFormState}\r\n                name=\"action\"\r\n                as=\"select\"\r\n                id=\"actionSelect\"\r\n              >\r\n                <option value=\"\">-- choose one --</option>\r\n                <option value=\"1\"> add new coupon</option>\r\n                <option value=\"2\"> delete coupon</option>\r\n                <option value=\"3\"> update coupon details</option>\r\n                <option value=\"4\"> get company coupons</option>\r\n                <option value=\"5\"> get company coupons by category</option>\r\n                <option value=\"6\"> get company coupons by max price</option>\r\n                <option value=\"7\"> get company details</option>\r\n                <option value=\"8\"> exit</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <div className=\"SubFormCompany\">{subForm}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import { SyntheticEvent } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./PurchaseCoupon.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface PcProps {\r\n  token: string;\r\n}\r\n\r\nconst PurchaseCoupon = (props: PcProps) => {\r\n  const token = props.token;\r\n  const [resState, setSt] = useState<CouponModel[]>(null);\r\n  const [cp, setCp] = useState<CouponModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const purchaseCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#purchaseCoupon\"));\r\n    const couponId = parseInt(formData.get(\"couponId\") as string);\r\n    axios\r\n      .post(\r\n        globals.urls.localUrl +\r\n          \":8080//api/customer/purchaseCoupon/\" +\r\n          couponId,\r\n        {},\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setCp(response.data);\r\n        alert(\"Coupon Purchased Successfully !!!\");\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/customer/getAvailableCouponsforCustomer\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n        console.log(Object.keys(response.data).length);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  }, [token, cp]);\r\n  return (\r\n    <div>\r\n      <div className=\"PurchaseCoupon\">\r\n        <h3 className=\"h3Div\">Purchase Coupon</h3>\r\n        <Form id=\"purchaseCoupon\" onSubmit={purchaseCouponHandler}>\r\n          <Form.Label>ID: </Form.Label>\r\n          <div className=\"FormColl\">\r\n            <Form.Control id=\"couponId\" name=\"couponId\" />\r\n          </div>\r\n\r\n          <Button type=\"submit\">SUBMIT</Button>\r\n        </Form>\r\n      </div>\r\n      {resState && (\r\n        <CouponsTable\r\n          err={err}\r\n          showTitleWhenEmpty\r\n          data={resState}\r\n          title={\r\n            Object.keys(resState).length > 0\r\n              ? \"AVAILABLE COUPONS\"\r\n              : \"NO COUPONS AVAILABLE\"\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseCoupon;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCustomerCoupons.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomerCoupons = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/customer/getCustomerCoupons\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setSt(error);\r\n      });\r\n  }, [token]);\r\n  return (\r\n    <div className=\"GetCustomerCoupons\">\r\n      <CouponsTable data={st} title=\"Customer's Coupons\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomerCoupons;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCustomerCouponsByCategory.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomerCouponsByCategory = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByIdForm\")\r\n    );\r\n    const categoryId = parseInt(formData.get(\"categoryId\") as string);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/customer//getCustomerCouponsByCategory/\" +\r\n          categoryId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"GetCustomerCouponsByCategory\">\r\n        <h3 className=\"h3Div\">Customer's Coupons by Category ID</h3>\r\n        <Form id=\"fetchCouponsByIdForm\" onSubmit={fetchCouponsHandler}>\r\n          <div className=\"FormColl\">\r\n            <Form.Group>\r\n              <Form.Label>CATEGORY ID: </Form.Label>\r\n              <Form.Control id=\"categoryId\" name=\"categoryId\" />\r\n            </Form.Group>\r\n          </div>\r\n          <Button type=\"submit\">FETCH</Button>\r\n        </Form>\r\n      </div>\r\n      <br />\r\n      <CouponsTable err={err} data={st} title=\"Coupons List\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomerCouponsByCategory;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCustomerCouponsByMaxPrice.css\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomerCouponsByMaxPrice = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByPriceForm\")\r\n    );\r\n    const mPrice = parseFloat(formData.get(\"mPrice\") as string);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \":8080//api/customer/getCustomerCouponsByMaxPrice/\" +\r\n          mPrice,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"GetCustomerCouponsByMaxPrice\">\r\n        <h3 className=\"h3Div\">Customer's Coupons by Max Price</h3>\r\n        <Form id=\"fetchCouponsByPriceForm\" onSubmit={fetchCouponsHandler}>\r\n          <div className=\"FormColl\">\r\n            <Form.Group>\r\n              <Form.Label>MAX PRICE: </Form.Label>\r\n              <Form.Control id=\"mPrice\" name=\"mPrice\" />\r\n            </Form.Group>\r\n            <Button type=\"submit\">FETCH</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <br />\r\n      <CouponsTable err={err} data={st} title=\"Coupons List\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomerCouponsByMaxPrice;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface CdProps {\r\n  token: string;\r\n}\r\nconst GetCustomerDetails = (props: CdProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CustomerModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \":8080//api/customer/getCustomerDetails\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  if (st) {\r\n    return (\r\n      <CustomerTable\r\n        err={err}\r\n        data={st}\r\n        title={st.first_name + \" \" + st.last_name}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default GetCustomerDetails;\r\n","import { useState } from \"react\";\r\nimport \"./Customer.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../../../Redux/actions\";\r\nimport PurchaseCoupon from \"../PurchaseCoupon/PurchaseCoupon\";\r\nimport GetCustomerCoupons from \"../GetCustomerCoupons/GetCustomerCoupons\";\r\nimport GetCustomerCouponsByCategoryId from \"../GetCustomerCouponsByCategory/GetCustomerCouponsByCategory\";\r\nimport GetCustomerCouponsByMaxPrice from \"../GetCustomerCouponsByMaxPrice/GetCustomerCouponsByMaxPrice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GetCustomerDetails from \"../GetCustomerDetails/GetCustomerDetails\";\r\nimport \"./Customer.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nfunction Customer() {\r\n  const [subFormState, setSubFormState] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  let subForm: JSX.Element;\r\n  let token = useSelector<SessionState, any>((state) => state.session.token);\r\n\r\n  const actionSelector = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    event.preventDefault();\r\n    setSubFormState(parseInt(event.target.value as string));\r\n  };\r\n\r\n  switch (subFormState) {\r\n    case 1:\r\n      subForm = <PurchaseCoupon token={token} />;\r\n      break;\r\n    case 2:\r\n      subForm = <GetCustomerCoupons token={token} />;\r\n      break;\r\n    case 3:\r\n      subForm = <GetCustomerCouponsByCategoryId token={token} />;\r\n      break;\r\n    case 4:\r\n      subForm = <GetCustomerCouponsByMaxPrice token={token} />;\r\n      break;\r\n    case 5:\r\n      subForm = <GetCustomerDetails token={token} />;\r\n      break;\r\n    case 6:\r\n      dispatch(actions.setSession({ token: \"\", userType: -1 }));\r\n      history.replace(\"/login\");\r\n      break;\r\n    default:\r\n      subForm = <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"CustomerH2\">customer Menu</h2>\r\n      <div className=\"Customer\">\r\n        <Form id=\"actionForm\">\r\n          <div className=\"FormColl\">\r\n            <Form.Group>\r\n              <Form.Label>Choose Action: </Form.Label>\r\n              <Form.Control\r\n                onChange={actionSelector}\r\n                name=\"action\"\r\n                as=\"select\"\r\n                id=\"actionSelect\"\r\n              >\r\n                <option value=\"\">-- choose one --</option>\r\n                <option value=\"1\"> purchase coupon</option>\r\n                <option value=\"2\"> get customer coupons</option>\r\n                <option value=\"3\"> get customer coupons by category</option>\r\n                <option value=\"4\"> get customer coupons by max price</option>\r\n                <option value=\"5\"> get customer details</option>\r\n                <option value=\"6\"> exit</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n          {/* <MyButton type=\"submit\"> SUBMIT </MyButton> */}\r\n        </Form>\r\n      </div>\r\n      <div className=\"SubFormCustomer\">{subForm}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customer;\r\n","import Header from \"./Header/Header\";\r\n//import Side from \"./Side/Side\";\r\nimport \"./Layout.css\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../MainArea/Login/Login\";\r\nimport Admin from \"../MainArea/AdminArea/Admin/Admin\";\r\nimport Company from \"../MainArea/CompanyArea/Company/Company\";\r\nimport Customer from \"../MainArea/CustomerArea/Cusotmer/Customer\";\r\nimport { useSelector } from \"react-redux\";\r\nfunction Layout(): JSX.Element {\r\n  let user = useSelector<SessionState, any>((state) => state.session.userType);\r\n  const guard = (\r\n    childComponent: JSX.Element,\r\n    userType: number\r\n  ): JSX.Element => {\r\n    if (user === userType) return childComponent;\r\n    return <Login />;\r\n  };\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"Layout\">\r\n        <header>\r\n          <Header />\r\n        </header>\r\n\r\n        <main>\r\n          <Switch>\r\n            {/* <Route path=\"/login\" component={Login} />; */}\r\n            <Route path=\"/login\" component={Login} exact />;\r\n            <Route path=\"/admin\" component={() => guard(<Admin />, 0)} exact />;\r\n            <Route\r\n              path=\"/company\"\r\n              component={() => guard(<Company />, 1)}\r\n              exact\r\n            />\r\n            ;\r\n            <Route\r\n              path=\"/customer\"\r\n              component={() => guard(<Customer />, 2)}\r\n              exact\r\n            />\r\n            ;\r\n            <Redirect from=\"/\" to=\"/login\" exact />;\r\n            <Route component={Login} />\r\n          </Switch>\r\n        </main>\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { SET_SESSION } from \"../actionTypes\";\r\n\r\nconst initialState : SessionState  = {\r\n session :{\r\n     token : \"\",\r\n     userType : -1, \r\n }\r\n};\r\n\r\nfunction sessionReducer(state = initialState, action: SessionAction) {\r\n  switch (action.type) {\r\n    case SET_SESSION: {\r\n     return {\r\n        ...state,\r\n        session:{\r\n            token: action.session.token,\r\n            userType: action.session.userType\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default sessionReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Layout from \"./Components/LayoutArea/Layout\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport sessionReducer from \"./Redux/reducers/sessionReducer\";\r\nimport { createStore, Store } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst store: Store<SessionState, SessionAction> & {\r\n  dispatch: DispatchType;\r\n} = createStore(sessionReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Layout />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}