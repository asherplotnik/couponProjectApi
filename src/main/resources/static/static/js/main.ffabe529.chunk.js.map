{"version":3,"sources":["Components/LayoutArea/Header/Header.tsx","Components/LayoutArea/Footer/Footer.tsx","Redux/SessionState.ts","Services/Globals.ts","Components/UI/Spinner/Spinner.tsx","Redux/Store.ts","Components/MainArea/Auth/Login.tsx","Components/UI/CompanyTable.tsx","Models/CompanyModel.ts","Components/MainArea/AdminArea/AddCompany/AddCompany.tsx","Components/UI/CustomerTable.tsx","Models/CustomerModel.ts","Components/MainArea/AdminArea/AddCustomer/AddCustomer.tsx","Components/MainArea/AdminArea/DeleteCompany/DeleteCompany.tsx","Components/MainArea/AdminArea/DeleteCustomer/DeleteCustomer.tsx","Models/ErrorModel.ts","Components/MainArea/AdminArea/UpdateCompany/UpdateCompany.tsx","Components/MainArea/AdminArea/UpdateCustomer/UpdateCustomer.tsx","Components/MainArea/AdminArea/GetAllCompanies/GetAllCompanies.tsx","Components/MainArea/AdminArea/GetAllCustomers/GetAllCustomers.tsx","Components/UI/CouponsTable.tsx","Components/MainArea/AdminArea/GetCompany/GetCompany.tsx","Components/MainArea/AdminArea/GetCustomer/GetCustomer.tsx","Components/MainArea/Unauthorized/Unauthorized.tsx","Components/MainArea/AdminArea/Admin/Admin.tsx","Components/UI/CouponCard/CouponCard.tsx","Components/MainArea/CompanyArea/AddCoupon/AddCoupon.tsx","Components/MainArea/CompanyArea/DeleteCoupon/DeleteCoupon.tsx","Components/MainArea/CompanyArea/UpdateCoupon/UpdateCoupon.tsx","Components/MainArea/CompanyArea/GetCompanyCouponsByCategoryId/GetCompanyCouponsByCategory.tsx","Components/MainArea/CompanyArea/GetCompanyCoupons/GetCompanyCoupons.tsx","Components/MainArea/CompanyArea/GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice.tsx","Components/MainArea/CompanyArea/GetCompanyDetails/GetCompanyDetails.tsx","Components/MainArea/CompanyArea/GetCompanyCoupon/GetCompanyCoupon.tsx","Components/MainArea/CompanyArea/Company/Company.tsx","Components/UI/Modal/Backdrop.tsx","Components/UI/Modal/Modal.tsx","Components/MainArea/CustomerArea/PurchaseCoupon/PurchaseCoupon.tsx","Components/MainArea/CustomerArea/GetCustomerCoupons/GetCustomerCoupons.tsx","Components/MainArea/CustomerArea/GetCustomerCouponsByCategory/GetCustomerCouponsByCategory.tsx","Components/MainArea/CustomerArea/GetCustomerCouponsByMaxPrice/GetCustomerCouponsByMaxPrice.tsx","Components/MainArea/CustomerArea/GetCustomerDetails/GetCustomerDetails.tsx","Components/MainArea/CustomerArea/GetCustomerCoupon/GetCustomerCoupon.tsx","Components/MainArea/CustomerArea/Cusotmer/Customer.tsx","Components/LayoutArea/Layout.tsx","index.tsx"],"names":["Header","className","Footer","SessionActionType","Globals","globals","urls","products","couponImages","localUrl","spinner","SessionState","session","token","userType","storedSession","JSON","parse","localStorage","getItem","this","setSessionAction","type","SetSession","payload","reducers","combineReducers","currentState","action","newState","setItem","stringify","RemoveSession","removeItem","store","createStore","Login","useState","loading","setLoading","userTypeState","setUserTypeState","history","useHistory","fetchLogin","e","a","preventDefault","formData","FormData","document","querySelector","password","get","email","axios","post","then","response","data","dispatch","catch","error","console","log","alert","loginView","Form","id","onSubmit","Group","Label","Control","name","required","placeholder","Button","push","CompanyTable","props","err","message","fetchedCompany","title","Table","CompanyModel","coupons","AddCompany","setFetchedCompany","setErr","company","headers","minLength","CustomerTable","fetchedCustomer","first_name","last_name","CustomerModel","AddCustomer","fetchedData","setFetchedData","customer","DeleteCompany","fetchCompanies","useEffect","parseInt","delete","as","size","value","map","opt","DeleteCustomerForm","setFetchedCustomer","fetchCustomers","ErrorModel","UpdateCompany","fetchedUpdate","setFetchedUpdate","conf","onChange","companyId","defaultValue","disabled","UpdateCustomer","customerId","GetAllCompanies","st","setSt","index","GetAllCustomers","CouponsTable","rowHovered","setRowHovered","cat","handleHover","row","fetchedCoupons","coupon","onMouseEnter","onMouseLeave","onClick","selectRow","categoryId","description","startDate","endDate","amount","price","src","image","alt","showTitleWhenEmpty","GetCompany","setFetchedCoupons","found","GetCustomer","Unauthorized","variant","Admin","subForm","subFormState","setSubFormState","getState","setToken","event","target","CouponCard","AddCoupon","append","step","DeleteCoupon","fetchedCoupon","setFetchedCoupon","fetchCoupons","UpdateCoupon","formCategory","setFormCategory","toString","couponId","getElementById","reset","GetCompanyCouponsByCategoryId","GetCompanyCoupons","GetCompanyCouponsByMaxPrice","mPrice","parseFloat","GetCompanyDetails","cm","setCm","GetCompanyCoupon","Company","GetCompanyCouponsByCategory","replace","Backdrop","show","clicked","Modal","nextProps","Fragment","modalClosed","style","width","left","transform","opacity","children","Component","PurchaseCoupon","resState","setResState","cp","setCp","showModal","setShowModal","selectId","setSelectedId","Object","keys","length","changeShowModal","filter","el","GetCustomerCoupons","GetCustomerCouponsByCategory","GetCustomerCouponsByMaxPrice","GetCustomerDetails","GetCustomerCoupon","Customer","Layout","path","component","exact","from","to","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ffabe529.chunk.js","sourcesContent":["import \"./Header.css\";\r\n\r\nfunction Header(): JSX.Element {\r\n  return (\r\n    <div className=\"Header\">\r\n      <h3>COUPON PROJECT</h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer(): JSX.Element {\r\n    return (\r\n        <div className=\"Footer\">\r\n\t\t\t<p>All rights reserved to Asher Plotnik ©</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","\r\n// Handling Products AppState\r\n\r\nimport SessionModel from \"../Models/SessionModel\";\r\n\r\n// Products AppState - המידע ברמת האפליקציה הקשור למוצרים - אלו בעצם כל המוצרים:\r\nexport class SessionState {\r\n    public session: SessionModel = {token:\"\",userType:-1} ; // We're going to create initial object\r\n    public constructor() {\r\n        const storedSession = JSON.parse(localStorage.getItem(\"session\"));\r\n        if(storedSession) {\r\n            this.session = storedSession;\r\n        }\r\n    }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Action Types - אלו פעולות ניתן לבצע על המידע ברמת האפליקציה:\r\nexport enum SessionActionType {\r\n    SetSession=\"SetSession\",\r\n    RemoveSession=\"RemoveSession\", \r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Product Action - אובייקט המכיל את המידע עבור הפעולה שאנו מבצעים על המידע ברמת הפליקציה\r\nexport interface SessionAction {\r\n    type: SessionActionType;\r\n    payload?: any; // payload?: any; if the payload can be empty.\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Action Creators - מתאים עבור כל פעולה Action ומחזירות אובייקט payload-פונקציות המקבלות את ה\r\n\r\nexport function setSessionAction(session: SessionModel): SessionAction {\r\n    return { type: SessionActionType.SetSession, payload: session };\r\n}\r\n\r\nexport function removeSessionAction(session: SessionModel): SessionAction {\r\n    return { type: SessionActionType.RemoveSession};\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Reducer - פונקציה המבצעת את הפעולה בפועל\r\nexport function SessionReducer(currentState: SessionState = new SessionState(), action: SessionAction): SessionState {\r\n    \r\n    const newState = {...currentState}; // Spread Operator - שכפול אובייקט\r\n\r\n    switch(action.type) {\r\n        case SessionActionType.SetSession:\r\n            newState.session.token = action.payload.token; \r\n            newState.session.userType = action.payload.userType; \r\n            localStorage.setItem(\"session\", JSON.stringify(newState.session));\r\n            break;\r\n        case SessionActionType.RemoveSession:\r\n            newState.session = null;\r\n            localStorage.removeItem(\"session\"); // clear user from the local storage.\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n","// Global settings which are the same for development and production: \r\nclass Globals {\r\n}\r\n\r\n// Global settings which are suitable only for development:\r\nclass DevelopmentGlobals extends Globals {\r\n    public urls = {\r\n        products: \"http://localhost:8080/api/products/\",\r\n        couponImages: \"http://localhost:8080/images/\",\r\n        localUrl : \"http://localhost:8080/\"\r\n    };\r\n}\r\n\r\n// Global settings which are suitable only for production:\r\nclass ProductionGlobals extends Globals {\r\n    public urls = {\r\n        products: \"https://ashercouponsystem.herokuapp.com/api/products/\", // In real life there will be the production address\r\n        couponImages:\"https://ashercouponsystem.herokuapp.com/images/\",\r\n        localUrl : \"https://ashercouponsystem.herokuapp.com/\"\r\n    };\r\n}\r\n\r\n// Creating the correct object\r\nconst globals = process.env.NODE_ENV === \"development\" ? new DevelopmentGlobals() : new ProductionGlobals();\r\n\r\nexport default globals;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\nconst spinner = () => <div className=\"SpinnerLoader\">Loading...</div>;\r\n\r\nexport default spinner;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { SessionReducer } from \"./SessionState\";\r\n\r\n\r\n// Single Reducer: \r\n// const store = createStore(productsReducer);\r\n\r\n// For getting ProductsState: \r\n// store.getState().products\r\n\r\n// ----------------------------------------------------------\r\n\r\n// Multiple Reducers: \r\nconst reducers = combineReducers({ SessionState: SessionReducer /*, employeesState: employeesReducer, customersState: customersReducer */});\r\nconst store = createStore(reducers);\r\n\r\n// For getting ProductsState: \r\n// store.getState().productsState.products\r\n// store.getState().employeesState.employees\r\n// store.getState().customersState.customers\r\n\r\n\r\n\r\nexport default store;\r\n","import \"./Login.css\";\r\nimport axios from \"axios\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport store from \"../../../Redux/Store\";\r\nimport { setSessionAction } from \"../../../Redux/SessionState\";\r\nimport UserPayload from \"../../../Models/UserPayload\";\r\n\r\nfunction Login(): JSX.Element {\r\n  const [loading, setLoading] = useState(false);\r\n  const [userTypeState, setUserTypeState] = useState(-1);\r\n  const history = useHistory();\r\n\r\n  const fetchLogin = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#loginForm\") as HTMLFormElement\r\n    );\r\n    const password = formData.get(\"password\");\r\n    const email = formData.get(\"email\");\r\n    setLoading(true);\r\n    await axios\r\n      .post<UserPayload>(globals.urls.localUrl + `login/${email}`, {\r\n        password: password,\r\n      })\r\n      .then((response) => {\r\n        setUserTypeState(response.data.userType as number);\r\n        store.dispatch(\r\n          setSessionAction({\r\n            token: response.data.token as string,\r\n            userType: response.data.userType as number,\r\n          })\r\n        );\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        console.log(error);\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  let loginView = <Spinner />;\r\n  if (!loading) {\r\n    loginView = (\r\n      <div className=\"Login\">\r\n        <div className=\"wrapperDiv\">\r\n          <h3>LOGIN</h3>\r\n          <Form className=\"ulForm\" id=\"loginForm\" onSubmit={fetchLogin}>\r\n            <Form.Group>\r\n              <Form.Label>Email :</Form.Label>\r\n              <Form.Control\r\n                // type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                required\r\n                placeholder=\"Enter email\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password:</Form.Label>\r\n              <Form.Control\r\n                id=\"password\"\r\n                name=\"password\"\r\n                required\r\n                // type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </Form.Group>\r\n            <Button id=\"submitButton\" type=\"submit\">\r\n              SUBMIT\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  switch (userTypeState) {\r\n    case 0:\r\n      history.push(\"/admin\");\r\n      break;\r\n    case 1:\r\n      history.push(\"/company\");\r\n      break;\r\n    case 2:\r\n      history.push(\"/customer\");\r\n      break;\r\n    default:\r\n  }\r\n  return loginView;\r\n}\r\n\r\nexport default Login;\r\n","import \"./CompanyTable.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport CompanyModel from \"../../Models/CompanyModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\n\r\ninterface CtProps {\r\n  title: string;\r\n  data: CompanyModel;\r\n  err?: ErrorModel;\r\n}\r\n\r\nconst CompanyTable = (props: CtProps) => {\r\n  console.log(props.err && props.err.response.data.message);\r\n  let fetchedCompany = props.data;\r\n  if (fetchedCompany) {\r\n    return (\r\n      <div className=\"CompanyTable\">\r\n        <div className=\"h3Div\">\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Password</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>{fetchedCompany.id}</td>\r\n              <td>{fetchedCompany.name}</td>\r\n              <td>{fetchedCompany.email}</td>\r\n              <td>{fetchedCompany.password}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className=\"h3Div\">\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default CompanyTable;\r\n","import CouponModel from \"./CouponModel\";\r\n\r\nclass CompanyModel {\r\n    public id:number=0;\r\n    public name:string=\"\";\r\n    public email:string=\"\";\r\n    public password:string=\"\";\r\n    public coupons:CouponModel[];\r\n}\r\n\r\nexport default CompanyModel;","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./AddCompany.css\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface AcProps {\r\n  token: string;\r\n}\r\n\r\nfunction AddCompany(props: AcProps) {\r\n  const token = props.token;\r\n  let [fetchedCompany, setFetchedCompany] = useState<CompanyModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const addCompanyHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#addCompanyForm\"));\r\n    console.log(formData.get(\"username\"));\r\n    let company: CompanyModel = new CompanyModel();\r\n    company.id = 0;\r\n    company.name = formData.get(\"username\") as string;\r\n    company.email = formData.get(\"email\") as string;\r\n    company.password = formData.get(\"password\") as string;\r\n\r\n    axios\r\n      .post(globals.urls.localUrl + \"api/admin/addCompany\", company, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCompany(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCompany\">\r\n      <h3 className=\"h3Div\">Add Company</h3>\r\n      <Form id=\"addCompanyForm\" onSubmit={addCompanyHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>Name: </Form.Label>\r\n            <Form.Control name=\"username\" type=\"text\" minLength={4} required />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control name=\"email\" type=\"email\" minLength={4} required />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              type=\"password\"\r\n              minLength={6}\r\n              required\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CompanyTable\r\n        err={err}\r\n        data={fetchedCompany}\r\n        title=\"COMPANY ADDED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCompany;\r\n","import \"./CustomerTable.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CustomerModel from \"../../Models/CustomerModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\n\r\ninterface CtProps {\r\n  title: string;\r\n  data: CustomerModel;\r\n  err?: ErrorModel;\r\n}\r\n\r\nconst CustomerTable = (props: CtProps) => {\r\n  console.log(props.err && props.err.response.data.message);\r\n  let fetchedCustomer = props.data;\r\n  if (fetchedCustomer) {\r\n    return (\r\n      <div>\r\n        <div className=\"CustomerTable\">\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>ID</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Password</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>1</td>\r\n              <td>{fetchedCustomer.id}</td>\r\n              <td>{fetchedCustomer.first_name}</td>\r\n              <td>{fetchedCustomer.last_name}</td>\r\n              <td>{fetchedCustomer.email}</td>\r\n              <td>{fetchedCustomer.password}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className=\"CustomerTable\">\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default CustomerTable;\r\n","import CouponModel from \"./CouponModel\";\r\n\r\nclass CustomerModel {\r\n    public id:number;\r\n    public first_name:string;\r\n    public last_name:string;\r\n    public email:string;\r\n    public password:string;\r\n    public coupons:CouponModel[];\r\n\r\n}\r\n\r\nexport default CustomerModel;\r\n","import React, { SyntheticEvent } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./AddCustomer.css\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface AcProps {\r\n  token: string;\r\n}\r\n\r\nfunction AddCustomer(props: AcProps) {\r\n  const token = props.token;\r\n  let [fetchedData, setFetchedData] = useState<CustomerModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const addCustomerHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#addCustomerForm\"));\r\n    let customer: CustomerModel = new CustomerModel();\r\n    customer.id = 0;\r\n    customer.last_name = formData.get(\"lastname\") as string;\r\n    customer.first_name = formData.get(\"firstname\") as string;\r\n    customer.email = formData.get(\"email\") as string;\r\n    customer.password = formData.get(\"password\") as string;\r\n    axios\r\n      .post(globals.urls.localUrl + \"api/admin/addCustomer\", customer, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCustomer\">\r\n      <h3 className=\"h3Div\">Add Customer</h3>\r\n      <Form id=\"addCustomerForm\" onSubmit={addCustomerHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Label>First Name: </Form.Label>\r\n            <Form.Control name=\"firstname\" minLength={2} required />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Last Name: </Form.Label>\r\n            <Form.Control name=\"lastname\" minLength={2} required />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control name=\"email\" minLength={4} required />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control name=\"password\" minLength={6} required />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CustomerTable\r\n        err={err}\r\n        data={fetchedData}\r\n        title=\"CUSTOMER ADDED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCustomer;\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./DeleteCompany.css\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\n\r\ninterface DcProps {\r\n  token: string;\r\n}\r\n\r\nfunction DeleteCompany(props: DcProps) {\r\n  const token = props.token;\r\n  let [fetchedCompany, setFetchedCompany] = useState(null);\r\n  let [fetchedData, setFetchedData] = useState<CompanyModel[]>(null);\r\n  let [err, setErr] = useState(null);\r\n  const deleteCompanyHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#deleteCompanyForm\"));\r\n    const id = parseInt(formData.get(\"id\") as string);\r\n    setFetchedCompany(null);\r\n    axios\r\n      .delete(globals.urls.localUrl + \"api/admin/deleteCompany/\" + id, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCompany(response.data);\r\n        fetchCompanies();\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchCompanies = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"DeleteCompany\">\r\n      <h3 className=\"h3Div\">Delete Company</h3>\r\n      <Form id=\"deleteCompanyForm\" onSubmit={deleteCompanyHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Control name=\"id\" as=\"select\" id=\"actionSelect\" size=\"lg\">\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CompanyModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID)\r\n                      {opt.id} Name: {opt.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n          <Button type=\"submit\">SUBMIT</Button>\r\n        </div>\r\n      </Form>\r\n      <CompanyTable\r\n        err={err}\r\n        data={fetchedCompany}\r\n        title=\"COMPANY DELETED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteCompany;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./DeleteCustomer.css\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface DcProps {\r\n  token: string;\r\n}\r\n\r\nfunction DeleteCustomerForm(props: DcProps) {\r\n  const token = props.token;\r\n  let [fetchedCustomer, setFetchedCustomer] = useState<CustomerModel>(null);\r\n  let [fetchedData, setFetchedData] = useState<CustomerModel[]>(null);\r\n  let [err, setErr] = useState(null);\r\n  const deleteCustomerHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#deleteCustomerForm\")\r\n    );\r\n    const id = parseInt(formData.get(\"id\") as string);\r\n    setFetchedCustomer(null);\r\n    axios\r\n      .delete(globals.urls.localUrl + \"api/admin/deleteCustomer/\" + id, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCustomer(response.data);\r\n        fetchCustomers();\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  const fetchCustomers = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"DeleteCustomer\">\r\n      <h3 className=\"h3Div\">Delete customer</h3>\r\n      <Form id=\"deleteCustomerForm\" onSubmit={deleteCustomerHandler}>\r\n        <div className=\"FormColl\">\r\n          {/* <Form.Group>\r\n            <Form.Label>ID to delete: </Form.Label>\r\n            <Form.Control name=\"id\" /> <Button type=\"submit\">SUBMIT</Button>\r\n          </Form.Group> */}\r\n          <Form.Control name=\"id\" as=\"select\" id=\"actionSelect\" size=\"lg\">\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CustomerModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID) {opt.id}\r\n                      {\"\\u00A0\"} {\"\\u00A0\"}\r\n                      {\"\\u00A0\"} Name: {opt.first_name} {opt.last_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n          <Button type=\"submit\">SUBMIT</Button>\r\n        </div>\r\n      </Form>\r\n      <CustomerTable\r\n        err={err}\r\n        data={fetchedCustomer}\r\n        title=\"CUSTOMER DELETED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteCustomerForm;\r\n","class ErrorModel {\r\n    public response:{\r\n        data:{\r\n            message:string;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorModel;","import { SyntheticEvent, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport \"./UpdateCompany.css\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface UcProps {\r\n  token: string;\r\n}\r\n\r\nfunction UpdateCompany(props: UcProps) {\r\n  const token = props.token;\r\n  const [fetchedCompany, setFetchedCompany] = useState<CompanyModel>(null);\r\n  const [fetchedUpdate, setFetchedUpdate] = useState<CompanyModel>(null);\r\n  const [fetchedData, setFetchedData] = useState<CompanyModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const updateCompanyHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (fetchedUpdate === null) {\r\n      return;\r\n    }\r\n    const formData = new FormData(document.querySelector(\"#updateCompanyForm\"));\r\n    let company: CompanyModel = new CompanyModel();\r\n    company.id = fetchedUpdate.id;\r\n    company.email = formData.get(\"email\") as string;\r\n    company.password = formData.get(\"password\") as string;\r\n    let conf = formData.get(\"confirm\") as string;\r\n    company.name = (document.querySelector(\r\n      \"#companyName\"\r\n    ) as HTMLInputElement).value;\r\n    if (conf !== company.password) {\r\n      alert(\"password don't match!!!\");\r\n      return;\r\n    }\r\n    axios\r\n      .post(globals.urls.localUrl + \"api/admin/updateCompany\", company, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        fetchCompanies();\r\n        setFetchedCompany(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  const fetchCompanies = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  const fetchCompanyByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#updateCompanyForm\"));\r\n    if ((formData.get(\"companyId\") as string) === \"\") {\r\n      return;\r\n    }\r\n    const companyId = parseInt(formData.get(\"companyId\") as string);\r\n\r\n    for (const company of fetchedData) {\r\n      if (company.id === companyId) {\r\n        setFetchedUpdate(company);\r\n        return;\r\n      }\r\n    }\r\n    setErr(new ErrorModel());\r\n  };\r\n\r\n  return (\r\n    <div className=\"UpdateCompany\">\r\n      <h3 className=\"h3Div\">Update Company</h3>\r\n      <Form id=\"updateCompanyForm\" onSubmit={updateCompanyHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Control\r\n              id=\"companyId\"\r\n              name=\"companyId\"\r\n              as=\"select\"\r\n              size=\"lg\"\r\n              onChange={fetchCompanyByIdHandler}\r\n            >\r\n              <option value=\"\">-- choose one --</option>\r\n              {fetchedData && (\r\n                <>\r\n                  {fetchedData.map((opt: CompanyModel) => {\r\n                    return (\r\n                      <option key={opt.id} value={opt.id}>\r\n                        ID)\r\n                        {opt.id} Name: {opt.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Name: </Form.Label>\r\n            <Form.Control\r\n              name=\"companyName\"\r\n              id=\"companyName\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.name}\r\n              disabled={true}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"email\"\r\n              minLength={4}\r\n              defaultValue={fetchedUpdate && fetchedUpdate.email}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              type=\"password\"\r\n              minLength={6}\r\n              defaultValue={fetchedUpdate && fetchedUpdate.password}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>confirm password: </Form.Label>\r\n            <Form.Control\r\n              name=\"confirm\"\r\n              type=\"password\"\r\n              minLength={6}\r\n              required\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CompanyTable\r\n        err={err}\r\n        data={fetchedCompany}\r\n        title=\"COMPANY UPDATED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateCompany;\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport \"./UpdateCustomer.css\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface UcProps {\r\n  token: string;\r\n}\r\n\r\nfunction UpdateCustomer(props: UcProps) {\r\n  const token = props.token;\r\n  let [fetchedUpdate, setFetchedUpdate] = useState<CustomerModel>(null);\r\n  let [fetchedCustomer, setFetchedCustomer] = useState<CustomerModel>(null);\r\n  const [fetchedData, setFetchedData] = useState<CustomerModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const updateCustomerHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#updateCustomerForm\")\r\n    );\r\n    let customer: CustomerModel = new CustomerModel();\r\n    customer.id = fetchedUpdate.id;\r\n    customer.email = formData.get(\"email\") as string;\r\n    customer.password = formData.get(\"password\") as string;\r\n    customer.first_name = formData.get(\"firstName\") as string;\r\n    customer.last_name = formData.get(\"lastName\") as string;\r\n    let conf = formData.get(\"confirm\") as string;\r\n    if (conf !== customer.password) {\r\n      alert(\"Password don't match!!\");\r\n      return;\r\n    }\r\n    axios\r\n      .post(globals.urls.localUrl + \"api/admin/updateCustomer\", customer, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        fetchCustomers();\r\n        setFetchedCustomer(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n  const fetchCustomerByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#updateCustomerForm\")\r\n    );\r\n    if ((formData.get(\"customerId\") as string) === \"\") {\r\n      return;\r\n    }\r\n    const customerId = parseInt(formData.get(\"customerId\") as string);\r\n\r\n    for (const customer of fetchedData) {\r\n      if (customer.id === customerId) {\r\n        setFetchedUpdate(customer);\r\n        return;\r\n      }\r\n    }\r\n    setErr(new ErrorModel());\r\n  };\r\n\r\n  const fetchCustomers = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"UpdateCustomer\">\r\n      <h3 className=\"h3Div\">Update Customer</h3>\r\n      <Form id=\"updateCustomerForm\" onSubmit={updateCustomerHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Control\r\n            id=\"customerId\"\r\n            name=\"customerId\"\r\n            as=\"select\"\r\n            size=\"lg\"\r\n            onChange={fetchCustomerByIdHandler}\r\n          >\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CustomerModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID) {opt.id}\r\n                      {\"\\u00A0\"} {\"\\u00A0\"}\r\n                      {\"\\u00A0\"} Name: {opt.first_name} {opt.last_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n          <Form.Group>\r\n            <Form.Label>First Name: </Form.Label>\r\n            <Form.Control\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.first_name}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Last Name: </Form.Label>\r\n            <Form.Control\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.last_name}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email: </Form.Label>\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"email\"\r\n              defaultValue={fetchedUpdate && fetchedUpdate.email}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>password: </Form.Label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              type=\"password\"\r\n              minLength={6}\r\n              defaultValue={fetchedUpdate && fetchedUpdate.password}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>confirm password: </Form.Label>\r\n            <Form.Control\r\n              name=\"confirm\"\r\n              type=\"password\"\r\n              minLength={6}\r\n              required\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <CustomerTable\r\n        err={err}\r\n        data={fetchedCustomer}\r\n        title=\"CUSTOMER UPDATED SUCCESSFULLY\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateCustomer;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./GetAllCompanies.css\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetAllCompanies = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get<CompanyModel[]>(\r\n        globals.urls.localUrl + \"api/admin/getAllCompanies\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(\r\n          <div>\r\n            <h3>Companies List</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr key=\"-1\">\r\n                  <th>#</th>\r\n                  <th>ID</th>\r\n                  <th>Name</th>\r\n                  <th>Email</th>\r\n                  <th>Password</th>\r\n                </tr>\r\n              </thead>{\" \"}\r\n              <tbody>\r\n                {response.data.map((company, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{company.id}</td>\r\n                    <td>{company.name}</td>\r\n                    <td>{company.email}</td>\r\n                    <td>{company.password}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n  return <div className=\"GetAllCompanies\">{st}</div>;\r\n};\r\nexport default GetAllCompanies;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"./GetAllCustomers.css\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\nconst GetAllCustomers = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get<CustomerModel[]>(\r\n        globals.urls.localUrl + \"api/admin/getAllCustomers\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(\r\n          <div>\r\n            <h3 className=\"GetAllCustomers\">Customers List</h3>\r\n            <Table>\r\n              <thead>\r\n                <tr key=\"-1\">\r\n                  <th>#</th>\r\n                  <th>ID</th>\r\n                  <th>First Name</th>\r\n                  <th>Last Name</th>\r\n                  <th>Email</th>\r\n                  <th>Password</th>\r\n                </tr>\r\n              </thead>{\" \"}\r\n              <tbody>\r\n                {response.data.map((customer, index) => (\r\n                  <tr key={index}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{customer.id}</td>\r\n                    <td>{customer.first_name}</td>\r\n                    <td>{customer.last_name}</td>\r\n                    <td>{customer.email}</td>\r\n                    <td>{customer.password}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n  return <div>{st}</div>;\r\n};\r\nexport default GetAllCustomers;\r\n","import \"./CouponsTable.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport CouponModel from \"../../Models/CouponModel\";\r\nimport ErrorModel from \"../../Models/ErrorModel\";\r\nimport { useState } from \"react\";\r\n\r\ninterface CpProps {\r\n  data: CouponModel[];\r\n  title: string;\r\n  showTitleWhenEmpty?: boolean;\r\n  err?: ErrorModel;\r\n  selectRow?: Function;\r\n}\r\n\r\nconst CouponsTable = (props: CpProps) => {\r\n  const [rowHovered, setRowHovered] = useState(-1);\r\n  const cat = [\"\", \"FOOD\", \"MOVIE\", \"DISCOUNT\", \"RESTAURANT\", \"VACATION\"];\r\n\r\n  const handleHover = (row: number) => {\r\n    setRowHovered(row);\r\n  };\r\n\r\n  const handleSelect = (id: number) => {\r\n    if (props.selectRow) props.selectRow(id);\r\n  };\r\n  let fetchedCoupons = props.data;\r\n  if (fetchedCoupons) {\r\n    return (\r\n      <div className=\"CouponsTable\">\r\n        <div className=\"h3Div\">\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <Table>\r\n          <thead>\r\n            <tr className=\"tableRow\">\r\n              <th>ID</th>\r\n              <th>Category</th>\r\n              <th>Company ID</th>\r\n              <th>Title</th>\r\n              <th>Description</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Amount</th>\r\n              <th>Price</th>\r\n              <th>Image</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {fetchedCoupons.map((coupon, index) => (\r\n              <tr\r\n                key={index}\r\n                className={\r\n                  rowHovered === index ? \"tableRow HoveredRow\" : \"tableRow\"\r\n                }\r\n                onMouseEnter={() => handleHover(index)}\r\n                onMouseLeave={() => handleHover(-1)}\r\n                onClick={() => handleSelect(coupon.id)}\r\n              >\r\n                <td>{coupon.id}</td>\r\n                <td>\r\n                  #{coupon.categoryId} -- {cat[coupon.categoryId]}\r\n                </td>\r\n                <td>{coupon.company.id}</td>\r\n                <td>{coupon.title}</td>\r\n                <td>{coupon.description}</td>\r\n                <td>{coupon.startDate}</td>\r\n                <td>{coupon.endDate}</td>\r\n                <td>{coupon.amount}</td>\r\n                <td>{coupon.price}</td>\r\n                <td>\r\n                  <div className=\"BoxImage\">\r\n                    <img src={coupon.image} alt={coupon.image} />\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  } else {\r\n    if (props.err) {\r\n      return (\r\n        <div className=\"h3Div\">\r\n          <h3>{props.err.response.data.message}</h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      if (props.showTitleWhenEmpty === true) {\r\n        return <h3 className=\"h3Div\"> {props.title} </h3>;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default CouponsTable;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./GetCompany.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompany = (props: GcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCompany, setFetchedCompany] = useState<CompanyModel>(null);\r\n  let [fetchedCoupons, setFetchedCoupons] = useState<CouponModel[]>(null);\r\n  let [fetchedData, setFetchedData] = useState<CompanyModel[]>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCompanyByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#getCompanyForm\"));\r\n    const companyId = parseInt(formData.get(\"companyId\") as string);\r\n    setFetchedCompany(null);\r\n    setFetchedCoupons(null);\r\n    let found = false;\r\n    for (const company of fetchedData) {\r\n      if (company.id === companyId) {\r\n        setFetchedCompany(company);\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!found) setErr(new ErrorModel());\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getCompanyCoupons/\" + companyId, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedCoupons(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCompanies/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"GetCompany\">\r\n      <h3 className=\"h3Div\">Get Company details</h3>\r\n      <Form id=\"getCompanyForm\">\r\n        <div className=\"FormColl\">\r\n          <Form.Control\r\n            name=\"companyId\"\r\n            as=\"select\"\r\n            id=\"companyId\"\r\n            size=\"lg\"\r\n            onChange={fetchCompanyByIdHandler}\r\n          >\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CompanyModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID)\r\n                      {opt.id} Name: {opt.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n        </div>\r\n      </Form>\r\n      <div>\r\n        {fetchedCompany && (\r\n          <CompanyTable\r\n            err={err}\r\n            data={fetchedCompany}\r\n            title={fetchedCompany.name}\r\n          />\r\n        )}\r\n        {fetchedCoupons && (\r\n          <CouponsTable data={fetchedCoupons} title=\"Company's Coupons\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompany;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"./GetCustomer.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomer = (props: GcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCustomer, setFetchedCustomer] = useState<CustomerModel>(null);\r\n  let [fetchedCoupons, setFetchedCoupons] = useState<CouponModel[]>(null);\r\n  let [fetchedData, setFetchedData] = useState<CustomerModel[]>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCustomerByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#getCustomerForm\"));\r\n    const customerId = parseInt(formData.get(\"customerId\") as string);\r\n    setFetchedCustomer(null);\r\n    setFetchedCoupons(null);\r\n    let found = false;\r\n    for (const customer of fetchedData) {\r\n      if (customer.id === customerId) {\r\n        setFetchedCustomer(customer);\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!found) setErr(new ErrorModel());\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl + \"api/admin/getCustomerCoupons/\" + customerId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setFetchedCoupons(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/admin/getAllCustomers/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"GetCustomer\">\r\n      <Form id=\"getCustomerForm\">\r\n        <div className=\"FormColl\">\r\n          <Form.Control\r\n            id=\"customerId\"\r\n            name=\"customerId\"\r\n            as=\"select\"\r\n            size=\"lg\"\r\n            onChange={fetchCustomerByIdHandler}\r\n          >\r\n            <option value=\"\">-- choose one --</option>\r\n            {fetchedData && (\r\n              <>\r\n                {fetchedData.map((opt: CustomerModel) => {\r\n                  return (\r\n                    <option key={opt.id} value={opt.id}>\r\n                      ID) {opt.id}\r\n                      {\"\\u00A0\"} {\"\\u00A0\"}\r\n                      {\"\\u00A0\"} Name: {opt.first_name} {opt.last_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </>\r\n            )}\r\n          </Form.Control>\r\n        </div>\r\n      </Form>\r\n      <div>\r\n        {fetchedCustomer && (\r\n          <CustomerTable\r\n            err={err}\r\n            data={fetchedCustomer}\r\n            title={fetchedCustomer.first_name + \" \" + fetchedCustomer.last_name}\r\n          />\r\n        )}\r\n        {fetchedCoupons && (\r\n          <CouponsTable data={fetchedCoupons} title=\"Customer's Coupons\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomer;\r\n","import { Button } from \"react-bootstrap\";\nimport { useHistory } from \"react-router\";\nimport \"./Unauthorized.css\";\n\nfunction Unauthorized(): JSX.Element {\n  const history = useHistory();\n  const handleClick = () => {\n    history.push(\"/login\");\n  };\n  console.log(\"UNAUTHORIZED\");\n  return (\n    <div className=\"Unauthorized\">\n      <p>YOU ARE UNAUTHORIZED</p>\n      <Button variant=\"danger\" onClick={handleClick}>\n        Return to login\n      </Button>\n    </div>\n  );\n}\n\nexport default Unauthorized;\n","import \"./Admin.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AddCompany from \"../AddCompany/AddCompany\";\r\nimport AddCustomer from \"../AddCustomer/AddCustomer\";\r\nimport DeleteCompany from \"../DeleteCompany/DeleteCompany\";\r\nimport DeleteCustomer from \"../DeleteCustomer/DeleteCustomer\";\r\nimport UpdateCompany from \"../UpdateCompany/UpdateCompany\";\r\nimport UpdateCustomer from \"../UpdateCustomer/UpdateCustomer\";\r\nimport GetAllCompanies from \"../GetAllCompanies/GetAllCompanies\";\r\nimport GetAllCustomers from \"../GetAllCustomers/GetAllCustomers\";\r\nimport GetCompany from \"../GetCompany/GetCompany\";\r\nimport GetCustomer from \"../GetCustomer/GetCustomer\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport store from \"../../../../Redux/Store\";\r\nimport { setSessionAction } from \"../../../../Redux/SessionState\";\r\nimport Unauthorized from \"../../Unauthorized/Unauthorized\";\r\nfunction Admin() {\r\n  const [subFormState, setSubFormState] = useState(0);\r\n  let [token, setToken] = useState(store.getState().SessionState.session.token);\r\n  const history = useHistory();\r\n\r\n  const actionSelector = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    event.preventDefault();\r\n    setSubFormState(parseInt(event.target.value as string));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setToken(store.getState().SessionState.session.token);\r\n  }, [token]);\r\n\r\n  let subForm: JSX.Element;\r\n  if (!token) {\r\n    return <Unauthorized />;\r\n  }\r\n  switch (subFormState) {\r\n    case 1:\r\n      subForm = <AddCompany token={token} />;\r\n      break;\r\n    case 2:\r\n      subForm = <DeleteCompany token={token} />;\r\n      break;\r\n    case 3:\r\n      subForm = <UpdateCompany token={token} />;\r\n      break;\r\n    case 4:\r\n      subForm = <GetCompany token={token} />;\r\n      break;\r\n    case 5:\r\n      subForm = <GetAllCompanies token={token} />;\r\n      break;\r\n    case 6:\r\n      subForm = <AddCustomer token={token} />;\r\n      break;\r\n    case 7:\r\n      subForm = <DeleteCustomer token={token} />;\r\n      break;\r\n    case 8:\r\n      subForm = <UpdateCustomer token={token} />;\r\n      break;\r\n    case 9:\r\n      subForm = <GetCustomer token={token} />;\r\n      break;\r\n    case 10:\r\n      subForm = <GetAllCustomers token={token} />;\r\n      break;\r\n    case 11:\r\n      store.dispatch(setSessionAction({ token: \"\", userType: -1 }));\r\n      history.push(\"/login\");\r\n      break;\r\n    default:\r\n      subForm = <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"h2\">Admin Menu</h2>\r\n      <div className=\"Admin\">\r\n        <Form id=\"actionForm\">\r\n          <Form.Group>\r\n            <Form.Label>Choose Action: </Form.Label>\r\n            <Form.Control\r\n              onChange={actionSelector}\r\n              name=\"action\"\r\n              as=\"select\"\r\n              id=\"actionSelect\"\r\n              size=\"lg\"\r\n            >\r\n              <option value=\"\">-- Choose one --</option>\r\n              <option value=\"1\"> Add new company</option>\r\n              <option value=\"2\"> Delete company</option>\r\n              <option value=\"3\"> Update company details</option>\r\n              <option value=\"4\"> Get company details</option>\r\n              <option value=\"5\"> Get all companies</option>\r\n              <option value=\"6\"> Add customer</option>\r\n              <option value=\"7\"> Delete customer</option>\r\n              <option value=\"8\"> Update customer details</option>\r\n              <option value=\"9\"> Get customer details</option>\r\n              <option value=\"10\"> Get all customers</option>\r\n              <option value=\"11\"> Exit</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n        <div className=\"SubFormAdmin\">{subForm}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","import CouponModel from \"../../../Models/CouponModel\";\nimport ErrorModel from \"../../../Models/ErrorModel\";\nimport \"./CouponCard.css\";\n\ninterface CcProps {\n  data: CouponModel;\n  err: ErrorModel;\n}\n\nfunction CouponCard(props: CcProps): JSX.Element {\n  const cat = [\"\", \"FOOD\", \"MOVIE\", \"DISCOUNT\", \"RESTAURANT\", \"VACATION\"];\n\n  return (\n    <div className=\"CouponCard\">\n      <div className=\"BorderBox\">\n        <div className=\"Box\">\n          <div>\n            <p>ID: {props.data.id}</p>\n            <p>TITLE: {props.data.title}</p>\n            <p>DESCRIPTION: {props.data.description}</p>\n            <p>\n              CATEGORY:#{props.data.categoryId} -- {cat[props.data.categoryId]}\n            </p>\n          </div>\n          <div>\n            <p>START DATE: {props.data.startDate}</p>\n            <p>END DATE {props.data.endDate}</p>\n            <p>PRICE: ${props.data.price}</p>\n            <p>AVAILABLE: {props.data.amount}</p>\n          </div>\n        </div>\n        <div className=\"BoxImage\">\n          <img src={props.data.image} alt={props.data.image} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CouponCard;\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./AddCoupon.css\";\r\n//import CouponTable from \"../../../UI/CouponTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CouponCard from \"../../../UI/CouponCard/CouponCard\";\r\n\r\ninterface AcProps {\r\n  token: string;\r\n}\r\n\r\nconst AddCoupon = (props: AcProps) => {\r\n  const token = props.token;\r\n  let [fetchedData, setFetchedData] = useState<CouponModel>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const addCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#addCouponForm\"));\r\n    formData.append(\"id\", \"0\");\r\n    formData.append(\"image\", (formData.get(\"imageFile\") as File).name);\r\n    let cat = formData.get(\"categoryId\") as string;\r\n    if (+cat === 0) {\r\n      alert(\"Must choose category\");\r\n    }\r\n    axios\r\n      .post(globals.urls.localUrl + \"api/company/addCoupon\", formData, {\r\n        headers: { token: token, \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddCoupon\">\r\n      <h3 className=\"h3Div\">Add Coupon</h3>\r\n      <Form id=\"addCouponForm\" onSubmit={addCouponHandler}>\r\n        <div className=\"AddCouponFormDiv\">\r\n          <div className=\"AddCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>Category: </Form.Label>\r\n              <Form.Control name=\"categoryId\" as=\"select\" className=\"FormEl\">\r\n                <option value=\"0\">-- Choose one --</option>\r\n                <option value=\"1\"> Food</option>\r\n                <option value=\"2\"> Movie</option>\r\n                <option value=\"3\"> Discount</option>\r\n                <option value=\"4\"> Restaurant</option>\r\n                <option value=\"5\"> Vacation</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Title: </Form.Label>\r\n              <Form.Control name=\"title\" required />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Start date: </Form.Label>\r\n              <Form.Control type=\"date\" name=\"startDate\" required />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>End date: </Form.Label>\r\n              <Form.Control type=\"date\" name=\"endDate\" required />\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"AddCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>Description: </Form.Label>\r\n              <Form.Control name=\"description\" required />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Amount: </Form.Label>\r\n              <Form.Control type=\"number\" name=\"amount\" required />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Price: </Form.Label>\r\n              <Form.Control type=\"number\" step=\"0.1\" name=\"price\" required />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Image: </Form.Label>\r\n              <Form.Control name=\"imageFile\" type=\"file\" required />\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <div>\r\n        {fetchedData && <h4>COUPON ADDED SUCCESSFULLY</h4>}\r\n        {fetchedData && <CouponCard err={err} data={fetchedData} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCoupon;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./DeleteCoupon.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CouponCard from \"../../../UI/CouponCard/CouponCard\";\r\n\r\ninterface DcProps {\r\n  token: string;\r\n}\r\n\r\nconst DeleteCoupon = (props: DcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCoupon, setFetchedCoupon] = useState<CouponModel>(null);\r\n  let [fetchedData, setFetchedData] = useState<CouponModel[]>(null);\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const deleteCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#deleteCouponForm\"));\r\n    const id = parseInt(formData.get(\"id\") as string);\r\n    axios\r\n      .delete(globals.urls.localUrl + \"api/company/deleteCoupon/\" + id, {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        fetchCoupons();\r\n        setFetchedCoupon(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchCoupons = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/company/getCompanyCoupons/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/company/getCompanyCoupons/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"DeleteCoupon\">\r\n      <h3 className=\"h3Div\">Delete Coupon</h3>\r\n      <Form id=\"deleteCouponForm\" onSubmit={deleteCouponHandler}>\r\n        <div className=\"FormColl\">\r\n          <Form.Group>\r\n            <Form.Control name=\"id\" as=\"select\" id=\"actionSelect\" size=\"lg\">\r\n              <option value=\"\">-- choose one --</option>\r\n              {fetchedData && (\r\n                <>\r\n                  {fetchedData.map((opt: CouponModel) => {\r\n                    return (\r\n                      <option key={opt.id} value={opt.id}>\r\n                        ID) {opt.id}\r\n                        {\"\\u00A0\"} {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        Title: {opt.title}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </Form.Control>\r\n            <Button type=\"submit\">SUBMIT</Button>\r\n          </Form.Group>\r\n        </div>\r\n      </Form>\r\n      {fetchedCoupon && (\r\n        <>\r\n          <h3>COUPON DELETED SUCCESSFULLY</h3>\r\n          <CouponCard err={err} data={fetchedCoupon} />{\" \"}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteCoupon;\r\n","import axios from \"axios\";\r\nimport { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport \"./UpdateCoupon.css\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CouponCard from \"../../../UI/CouponCard/CouponCard\";\r\n\r\ninterface UcProps {\r\n  token: string;\r\n}\r\n\r\nconst UpdateCoupon = (props: UcProps) => {\r\n  const token = props.token;\r\n  let [fetchedCoupon, setFetchedCoupon] = useState<CouponModel>(null);\r\n  let [fetchedUpdate, setFetchedUpdate] = useState<CouponModel>(null);\r\n  let [fetchedData, setFetchedData] = useState<CouponModel[]>(null);\r\n  let [formCategory, setFormCategory] = useState(\"0\");\r\n  let [err, setErr] = useState<ErrorModel>(null);\r\n  const updateCouponHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#updateCouponForm\"));\r\n    formData.append(\"id\", fetchedCoupon.id.toString());\r\n    if (formData.get(\"imageFile\") as File)\r\n      formData.append(\"image\", (formData.get(\"imageFile\") as File).name);\r\n    let cat = formData.get(\"categoryId\") as string;\r\n    if (cat === \"0\") {\r\n      alert(\"Must choose category\");\r\n    }\r\n    axios\r\n      .post(globals.urls.localUrl + \"api/company/updateCoupon\", formData, {\r\n        headers: { token: token, \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n      .then(function (response) {\r\n        fetchCoupons();\r\n        setFetchedCoupon(null);\r\n        setFetchedUpdate(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  const fetchCouponByIdHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#updateCouponForm\"));\r\n    if ((formData.get(\"couponId\") as string) === \"\") {\r\n      return;\r\n    }\r\n    const couponId = parseInt(formData.get(\"couponId\") as string);\r\n\r\n    for (const coupon of fetchedData) {\r\n      if (coupon.id === couponId) {\r\n        (document.getElementById(\r\n          \"updateCouponForm\"\r\n        ) as HTMLFormElement).reset();\r\n        setFetchedCoupon(coupon);\r\n        setFormCategory(coupon.categoryId.toString());\r\n        return;\r\n      }\r\n    }\r\n    (document.getElementById(\"updateCouponForm\") as HTMLFormElement).reset();\r\n    setErr(new ErrorModel());\r\n  };\r\n\r\n  const fetchCoupons = () => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/company/getCompanyCoupons\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/company/getCompanyCoupons/\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setFetchedData(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  const onSelectCategory = (e: SyntheticEvent) => {\r\n    setFormCategory((e.target as HTMLInputElement).value as string);\r\n  };\r\n\r\n  return (\r\n    <div className=\"UpdateCouponWrapper\">\r\n      <h3 className=\"h3Div\">Update Coupon</h3>\r\n      <Form id=\"updateCouponForm\" onSubmit={updateCouponHandler}>\r\n        <Form.Group>\r\n          <Form.Label>ID: </Form.Label>\r\n          <div className=\"UpdateCouponFormColl\">\r\n            <Form.Control\r\n              name=\"couponId\"\r\n              as=\"select\"\r\n              id=\"couponId\"\r\n              size=\"lg\"\r\n              onChange={fetchCouponByIdHandler}\r\n            >\r\n              <option value=\"\">-- choose one --</option>\r\n              {fetchedData && (\r\n                <>\r\n                  {fetchedData.map((opt: CouponModel) => {\r\n                    return (\r\n                      <option key={opt.id} value={opt.id}>\r\n                        ID) {opt.id}\r\n                        {\"\\u00A0\"} {\"\\u00A0\"}\r\n                        {\"\\u00A0\"}\r\n                        Title: {opt.title}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </Form.Control>\r\n          </div>\r\n        </Form.Group>\r\n        <div className=\"UpdateCouponFormDiv\">\r\n          <div className=\"UpdateCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>Category: </Form.Label>\r\n              <Form.Control\r\n                name=\"categoryId\"\r\n                as=\"select\"\r\n                className=\"FormEl\"\r\n                value={formCategory}\r\n                onChange={onSelectCategory}\r\n              >\r\n                <option value=\"0\">-- Choose one --</option>\r\n                <option value=\"1\"> Food</option>\r\n                <option value=\"2\"> Movie</option>\r\n                <option value=\"3\"> Discount</option>\r\n                <option value=\"4\"> Restaurant</option>\r\n                <option value=\"5\"> Vacation</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Title: </Form.Label>\r\n              <Form.Control\r\n                name=\"title\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.title}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Description: </Form.Label>\r\n              <Form.Control\r\n                name=\"description\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.description}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Start date: </Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                defaultValue={\r\n                  fetchedCoupon && fetchedCoupon.startDate.toString()\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"UpdateCouponFormDivColl\">\r\n            <Form.Group>\r\n              <Form.Label>End date: </Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.endDate.toString()}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Amount: </Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                name=\"amount\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.amount}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Price: </Form.Label>\r\n              <Form.Control\r\n                name=\"price\"\r\n                type=\"number\"\r\n                step=\"0.1\"\r\n                defaultValue={fetchedCoupon && fetchedCoupon.price}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Image: </Form.Label>\r\n              <Form.Control type=\"file\" name=\"imageFile\" />\r\n            </Form.Group>\r\n          </div>\r\n        </div>\r\n        <Button type=\"submit\">SUBMIT</Button>\r\n      </Form>\r\n      <div>\r\n        {fetchedCoupon && <CouponCard err={err} data={fetchedCoupon} />}\r\n        {fetchedUpdate && <h4>COUPON UPDATED SUCCESSFULLY</h4>}\r\n        {fetchedUpdate && <CouponCard err={err} data={fetchedUpdate} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateCoupon;\r\n","import axios from \"axios\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport \"./GetCompanyCouponsByCategoryId.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\ninterface GpProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyCouponsByCategoryId = (props: GpProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByIdForm\")\r\n    );\r\n    const categoryId = parseInt(formData.get(\"categoryId\") as string);\r\n    if (formData.get(\"categoryId\") === \"\") {\r\n      setSt(null);\r\n      return;\r\n    }\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \"api/company/getCompanyCouponsByCategory/\" +\r\n          categoryId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"GetCompanyCouponsByCategoryId\">\r\n      <h3 className=\"h3Div\">Get Company coupons by category ID</h3>\r\n      <Form id=\"fetchCouponsByIdForm\">\r\n        <div className=\"innerFormDiv\">\r\n          <Form.Control\r\n            name=\"categoryId\"\r\n            as=\"select\"\r\n            id=\"categoryId\"\r\n            size=\"lg\"\r\n            onChange={fetchCouponsHandler}\r\n          >\r\n            <option value=\"\">-- choose one --</option>\r\n            <option value=\"1\">1) Food</option>\r\n            <option value=\"2\">2) Movie</option>\r\n            <option value=\"3\">3) Discount</option>\r\n            <option value=\"4\">4) Restaurant</option>\r\n            <option value=\"5\">5) Vacation</option>\r\n          </Form.Control>\r\n        </div>\r\n      </Form>\r\n      {st && <CouponsTable err={err} data={st} title=\"Coupons list\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompanyCouponsByCategoryId;\r\n","import axios from \"axios\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCompanyCoupons.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyCoupons = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>([]);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/company/getCompanyCoupons\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"GetCompanyCoupons\">\r\n      <CouponsTable err={err} data={st} title=\"Coupons List\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompanyCoupons;\r\n","import axios from \"axios\";\r\n//import { localUrl } from \"../../../helper\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport \"./GetCompanyCouponsByMaxPrice.css\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GpProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyCouponsByMaxPrice = (props: GpProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByPriceForm\")\r\n    );\r\n    const mPrice = parseFloat(formData.get(\"mPrice\") as string);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \"api/company//getCompanyCouponsByMaxPrice/\" +\r\n          mPrice,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"GetCompanyCouponsByMaxPrice\">\r\n      <h3 className=\"h3Div\">Get Company coupons by Max Price</h3>\r\n      <Form id=\"fetchCouponsByPriceForm\" onSubmit={fetchCouponsHandler}>\r\n        <div className=\"innerFormDiv\">\r\n          <Form.Group>\r\n            <Form.Label>MAXIMUM PRICE: </Form.Label>\r\n            <Form.Control id=\"mPrice\" name=\"mPrice\" />\r\n          </Form.Group>\r\n          <Button type=\"submit\">FETCH</Button>\r\n        </div>\r\n      </Form>\r\n      {st && <CouponsTable err={err} data={st} title=\"Coupons List\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCompanyCouponsByMaxPrice;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CompanyTable from \"../../../UI/CompanyTable\";\r\nimport CompanyModel from \"../../../../Models/CompanyModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface CdProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCompanyDetails = (props: CdProps) => {\r\n  const token = props.token;\r\n  const [cm, setCm] = useState<CompanyModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get<CompanyModel>(\r\n        globals.urls.localUrl + \"api/company/getCompanyDetails\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setCm(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n  if (cm) {\r\n    return <CompanyTable err={err} data={cm} title={cm.name} />;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default GetCompanyDetails;\r\n","import CouponCard from \"../../../UI/CouponCard/CouponCard\";\nimport \"./GetCompanyCoupon.css\";\nimport axios from \"axios\";\nimport { SyntheticEvent, useEffect, useState } from \"react\";\nimport globals from \"../../../../Services/Globals\";\nimport { Form } from \"react-bootstrap\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport ErrorModel from \"../../../../Models/ErrorModel\";\n\ninterface GcProps {\n  token: string;\n}\nfunction GetCompanyCoupon(props: GcProps): JSX.Element {\n  const token = props.token;\n  let [fetchedCoupon, setFetchedCoupon] = useState<CouponModel>(null);\n  let [fetchedData, setFetchedData] = useState<CouponModel[]>(null);\n  let [err, setErr] = useState<ErrorModel>(null);\n\n  const fetchCouponHandler = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const formData = new FormData(document.querySelector(\"#getCouponForm\"));\n    const couponId = parseInt(formData.get(\"couponId\") as string);\n    for (const coupon of fetchedData) {\n      if (coupon.id === couponId) {\n        setFetchedCoupon(coupon);\n        break;\n      }\n      setErr(new ErrorModel());\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(globals.urls.localUrl + \"api/company/getCompanyCoupons/\", {\n        headers: { token: token },\n      })\n      .then(function (response) {\n        setFetchedData(response.data);\n      })\n      .catch(function (error) {\n        setErr(error);\n        console.log(error);\n      });\n  }, [token]);\n\n  return (\n    <div className=\"GetCompanyCoupon\">\n      <h3 className=\"h3Div\">Get Coupon details</h3>\n      <Form id=\"getCouponForm\">\n        <div className=\"FormColl\">\n          <Form.Control\n            name=\"couponId\"\n            as=\"select\"\n            id=\"couponId\"\n            size=\"lg\"\n            onChange={fetchCouponHandler}\n          >\n            <option value=\"\">-- choose one --</option>\n            {fetchedData && (\n              <>\n                {fetchedData.map((opt: CouponModel) => {\n                  return (\n                    <option key={opt.id} value={opt.id}>\n                      ID) {opt.id}\n                      {\"\\u00A0\"} {\"\\u00A0\"}\n                      {\"\\u00A0\"}\n                      Title: {opt.title}\n                    </option>\n                  );\n                })}\n              </>\n            )}\n          </Form.Control>\n        </div>\n      </Form>\n      <div>\n        {fetchedCoupon && <CouponCard err={err} data={fetchedCoupon} />}\n      </div>\n    </div>\n  );\n}\n\nexport default GetCompanyCoupon;\n","import { useEffect, useState } from \"react\";\r\nimport \"./Company.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport AddCoupon from \"../AddCoupon/AddCoupon\";\r\nimport DeleteCoupon from \"../DeleteCoupon/DeleteCoupon\";\r\nimport UpdateCoupon from \"../UpdateCoupon/UpdateCoupon\";\r\nimport GetCompanyCouponsByCategoryId from \"../GetCompanyCouponsByCategoryId/GetCompanyCouponsByCategory\";\r\nimport GetCompanyCoupons from \"../GetCompanyCoupons/GetCompanyCoupons\";\r\nimport GetCompanyCouponsByMaxPrice from \"../GetCompanyCouponsByMaxPrice/GetCompanyCouponsByMaxPrice\";\r\nimport GetCompanyDetails from \"../GetCompanyDetails/GetCompanyDetails\";\r\nimport GetCompanyCoupon from \"../GetCompanyCoupon/GetCompanyCoupon\";\r\nimport store from \"../../../../Redux/Store\";\r\nimport { setSessionAction } from \"../../../../Redux/SessionState\";\r\nimport Unauthorized from \"../../Unauthorized/Unauthorized\";\r\n\r\nconst Company = (): JSX.Element => {\r\n  const actionSelector = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    event.preventDefault();\r\n    setSubFormState(parseInt(event.target.value as string));\r\n  };\r\n  const [subFormState, setSubFormState] = useState(0);\r\n  let [token, setToken] = useState(store.getState().SessionState.session.token);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    setToken(store.getState().SessionState.session.token);\r\n  }, [token]);\r\n\r\n  let subForm: JSX.Element;\r\n  if (!token) {\r\n    return <Unauthorized />;\r\n  }\r\n  switch (subFormState) {\r\n    case 1:\r\n      subForm = <AddCoupon token={token} />;\r\n      break;\r\n    case 2:\r\n      subForm = <DeleteCoupon token={token} />;\r\n      break;\r\n    case 3:\r\n      subForm = <UpdateCoupon token={token} />;\r\n      break;\r\n    case 4:\r\n      subForm = <GetCompanyCoupon token={token} />;\r\n      break;\r\n    case 5:\r\n      subForm = <GetCompanyCoupons token={token} />;\r\n      break;\r\n    case 6:\r\n      subForm = <GetCompanyCouponsByCategoryId token={token} />;\r\n      break;\r\n    case 7:\r\n      subForm = <GetCompanyCouponsByMaxPrice token={token} />;\r\n      break;\r\n    case 8:\r\n      subForm = <GetCompanyDetails token={token} />;\r\n      break;\r\n    case 9:\r\n      store.dispatch(setSessionAction({ token: \"\", userType: -1 }));\r\n      history.replace(\"/login\");\r\n      break;\r\n    default:\r\n      subForm = <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"Company\">\r\n      <h3>Company Menu</h3>\r\n      <div className=\"FormDiv\">\r\n        <Form id=\"actionForm\">\r\n          <div className=\"Field\">\r\n            <Form.Group>\r\n              <Form.Label>Choose Action: </Form.Label>\r\n              <Form.Control\r\n                onChange={actionSelector}\r\n                value={subFormState}\r\n                name=\"action\"\r\n                as=\"select\"\r\n                id=\"actionSelect\"\r\n                size=\"lg\"\r\n              >\r\n                <option value=\"\">-- choose one --</option>\r\n                <option value=\"1\"> add new coupon</option>\r\n                <option value=\"2\"> delete coupon</option>\r\n                <option value=\"3\"> update coupon details</option>\r\n                <option value=\"4\"> get company coupon by ID</option>\r\n                <option value=\"5\"> get company coupons</option>\r\n                <option value=\"6\"> get company coupons by category</option>\r\n                <option value=\"7\"> get company coupons by max price</option>\r\n                <option value=\"8\"> get company details</option>\r\n                <option value=\"9\"> exit</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n        </Form>\r\n        <div className=\"SubFormCompany\">{subForm}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import \"./Backdrop.css\";\r\n\r\ninterface BackdropProps {\r\n  clicked: Function;\r\n  show: boolean;\r\n}\r\n\r\nconst Backdrop = (props: BackdropProps) => {\r\n  return props.show ? (\r\n    <div className=\"Backdrop\" onClick={() => props.clicked()}></div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\nexport default Backdrop;\r\n","import React, { Component } from \"react\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from \"./Backdrop\";\r\n\r\ninterface ModalProps {\r\n  show: boolean;\r\n  modalClosed: Function;\r\n  width: string;\r\n  left: string;\r\n}\r\nclass Modal extends Component<ModalProps> {\r\n  shouldComponentUpdate(nextProps: ModalProps) {\r\n    return nextProps.show !== this.props.show;\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n        <div\r\n          className=\"Modal\"\r\n          style={{\r\n            width: this.props.width,\r\n            left: this.props.left,\r\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-200vh)\",\r\n            opacity: this.props.show ? 1 : 0,\r\n          }}\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Modal;\r\n","//import { SyntheticEvent } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./PurchaseCoupon.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CouponCard from \"../../../UI/CouponCard/CouponCard\";\r\nimport Modal from \"../../../UI/Modal/Modal\";\r\n\r\ninterface PcProps {\r\n  token: string;\r\n}\r\n\r\nconst PurchaseCoupon = (props: PcProps) => {\r\n  const token = props.token;\r\n  const [resState, setResState] = useState<CouponModel[]>(null);\r\n  const [cp, setCp] = useState<CouponModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [selectId, setSelectedId] = useState<number>(-1);\r\n  const purchaseCouponHandler = () => {\r\n    axios\r\n      .post(\r\n        globals.urls.localUrl + \"api/customer/purchaseCoupon/\" + selectId,\r\n        {},\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setCp(response.data);\r\n        changeShowModal();\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        changeShowModal();\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl + \"api/customer/getAvailableCouponsforCustomer\",\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setResState(response.data);\r\n        console.log(Object.keys(response.data).length);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  }, [token, cp]);\r\n\r\n  const changeShowModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleSelectedRow = (id: number) => {\r\n    setSelectedId(id);\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        show={showModal}\r\n        modalClosed={changeShowModal}\r\n        width=\"45%\"\r\n        left=\"27.5%\"\r\n      >\r\n        <p>ARE YOU SURE?</p>\r\n        {resState && (\r\n          <CouponCard\r\n            data={resState.filter((el) => el.id === selectId)[0]}\r\n            err={err}\r\n          />\r\n        )}\r\n\r\n        <Button onClick={purchaseCouponHandler}>YES</Button>\r\n        <Button variant=\"danger\" onClick={changeShowModal}>\r\n          NO\r\n        </Button>\r\n      </Modal>\r\n      <div className=\"PurchaseCoupon\">\r\n        <h3 className=\"h3Div\">Purchase Coupon</h3>\r\n      </div>\r\n      {resState && (\r\n        <CouponsTable\r\n          err={err}\r\n          showTitleWhenEmpty\r\n          data={resState}\r\n          //selectRow={purchaseCouponHandler}\r\n          selectRow={handleSelectedRow}\r\n          title={\r\n            Object.keys(resState).length > 0\r\n              ? \"AVAILABLE COUPONS\"\r\n              : \"NO COUPONS AVAILABLE\"\r\n          }\r\n        />\r\n      )}\r\n      {cp && (\r\n        <>\r\n          <h3>Coupon purchased successfully</h3>\r\n          <CouponCard err={err} data={cp} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseCoupon;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCustomerCoupons.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomerCoupons = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/customer/getCustomerCoupons\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setSt(error);\r\n      });\r\n  }, [token]);\r\n  return (\r\n    <div className=\"GetCustomerCoupons\">\r\n      <CouponsTable data={st} title=\"Customer's Coupons\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomerCoupons;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCustomerCouponsByCategory.css\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomerCouponsByCategory = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByIdForm\")\r\n    );\r\n    const categoryId = parseInt(formData.get(\"categoryId\") as string);\r\n    if (formData.get(\"categoryId\") === \"\") {\r\n      setSt(null);\r\n      return;\r\n    }\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \"api/customer/getCustomerCouponsByCategory/\" +\r\n          categoryId,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"GetCustomerCouponsByCategory\">\r\n        <h3 className=\"h3Div\">Customer's Coupons by Category ID</h3>\r\n        <Form id=\"fetchCouponsByIdForm\">\r\n          <div className=\"FormColl\">\r\n            <Form.Control\r\n              name=\"categoryId\"\r\n              as=\"select\"\r\n              id=\"categoryId\"\r\n              size=\"lg\"\r\n              onChange={fetchCouponsHandler}\r\n            >\r\n              <option value=\"\">-- choose one --</option>\r\n              <option value=\"1\">1) Food</option>\r\n              <option value=\"2\">2) Movie</option>\r\n              <option value=\"3\">3) Discount</option>\r\n              <option value=\"4\">4) Restaurant</option>\r\n              <option value=\"5\">5) Vacation</option>\r\n            </Form.Control>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <br />\r\n      {st && <CouponsTable err={err} data={st} title=\"Coupons List\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomerCouponsByCategory;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { SyntheticEvent, useState } from \"react\";\r\nimport CouponsTable from \"../../../UI/CouponsTable\";\r\nimport \"./GetCustomerCouponsByMaxPrice.css\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport CouponModel from \"../../../../Models/CouponModel\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\n\r\ninterface GcProps {\r\n  token: string;\r\n}\r\n\r\nconst GetCustomerCouponsByMaxPrice = (props: GcProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CouponModel[]>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  const fetchCouponsHandler = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(\r\n      document.querySelector(\"#fetchCouponsByPriceForm\")\r\n    );\r\n    const mPrice = parseFloat(formData.get(\"mPrice\") as string);\r\n    axios\r\n      .get(\r\n        globals.urls.localUrl +\r\n          \"api/customer/getCustomerCouponsByMaxPrice/\" +\r\n          mPrice,\r\n        {\r\n          headers: { token: token },\r\n        }\r\n      )\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"GetCustomerCouponsByMaxPrice\">\r\n        <h3 className=\"h3Div\">Customer's Coupons by Max Price</h3>\r\n        <Form id=\"fetchCouponsByPriceForm\" onSubmit={fetchCouponsHandler}>\r\n          <div className=\"FormColl\">\r\n            <Form.Group>\r\n              <Form.Label>MAX PRICE: </Form.Label>\r\n              <Form.Control id=\"mPrice\" name=\"mPrice\" />\r\n            </Form.Group>\r\n            <Button type=\"submit\">FETCH</Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <br />\r\n      <CouponsTable err={err} data={st} title=\"Coupons List\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetCustomerCouponsByMaxPrice;\r\n","import axios from \"axios\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport { useEffect, useState } from \"react\";\r\nimport CustomerTable from \"../../../UI/CustomerTable\";\r\nimport ErrorModel from \"../../../../Models/ErrorModel\";\r\nimport CustomerModel from \"../../../../Models/CustomerModel\";\r\n\r\ninterface CdProps {\r\n  token: string;\r\n}\r\nconst GetCustomerDetails = (props: CdProps) => {\r\n  const token = props.token;\r\n  const [st, setSt] = useState<CustomerModel>(null);\r\n  const [err, setErr] = useState<ErrorModel>(null);\r\n  useEffect(() => {\r\n    axios\r\n      .get(globals.urls.localUrl + \"api/customer/getCustomerDetails\", {\r\n        headers: { token: token },\r\n      })\r\n      .then(function (response) {\r\n        setSt(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        setErr(error);\r\n        console.log(error);\r\n      });\r\n  }, [token]);\r\n\r\n  if (st) {\r\n    return (\r\n      <CustomerTable\r\n        err={err}\r\n        data={st}\r\n        title={st.first_name + \" \" + st.last_name}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default GetCustomerDetails;\r\n","import CouponCard from \"../../../UI/CouponCard/CouponCard\";\nimport \"./GetCustomerCoupon.css\";\nimport axios from \"axios\";\nimport { SyntheticEvent, useEffect, useState } from \"react\";\nimport globals from \"../../../../Services/Globals\";\nimport { Form, Button } from \"react-bootstrap\";\nimport CouponModel from \"../../../../Models/CouponModel\";\nimport ErrorModel from \"../../../../Models/ErrorModel\";\n\ninterface GcProps {\n  token: string;\n  id?: number;\n}\nfunction GetCustomerCoupon(props: GcProps): JSX.Element {\n  const token = props.token;\n  let [fetchedCoupon, setFetchedCoupon] = useState<CouponModel>(null);\n  let [fetchedData, setFetchedData] = useState<CouponModel[]>(null);\n  let [err, setErr] = useState<ErrorModel>(null);\n  const fetchCouponHandler = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const formData = new FormData(document.querySelector(\"#getCouponForm\"));\n    const couponId = parseInt(formData.get(\"couponId\") as string);\n    if (formData.get(\"couponId\") === \"\") {\n      setFetchedCoupon(null);\n      return;\n    }\n    for (const coupon of fetchedData) {\n      if (coupon.id === couponId) {\n        setFetchedCoupon(coupon);\n        break;\n      }\n      setErr(new ErrorModel());\n    }\n  };\n\n  useEffect(() => {\n    axios\n      .get(globals.urls.localUrl + \"api/customer/getCustomerCoupons/\", {\n        headers: { token: token },\n      })\n      .then(function (response) {\n        setFetchedData(response.data);\n      })\n      .catch(function (error) {\n        setErr(error);\n        console.log(error);\n      });\n  }, [token]);\n\n  return (\n    <div className=\"GetCustomerCoupon\">\n      <h3 className=\"h3Div\">Get Coupon details</h3>\n      <Form id=\"getCouponForm\" onSubmit={fetchCouponHandler}>\n        <div className=\"FormColl\">\n          <Form.Control name=\"couponId\" as=\"select\" id=\"couponId\" size=\"lg\">\n            <option value=\"\">-- choose one --</option>\n            {fetchedData && (\n              <>\n                {fetchedData.map((opt: CouponModel) => {\n                  return (\n                    <option key={opt.id} value={opt.id}>\n                      ID) {opt.id}\n                      {\"\\u00A0\"} {\"\\u00A0\"}\n                      {\"\\u00A0\"}\n                      Title: {opt.title}\n                    </option>\n                  );\n                })}\n              </>\n            )}\n          </Form.Control>\n        </div>\n        <Button type=\"submit\">FETCH</Button>\n      </Form>\n      <div>\n        {fetchedCoupon && <CouponCard err={err} data={fetchedCoupon} />}\n      </div>\n    </div>\n  );\n}\n\nexport default GetCustomerCoupon;\n","import { useEffect, useState } from \"react\";\r\nimport \"./Customer.css\";\r\nimport PurchaseCoupon from \"../PurchaseCoupon/PurchaseCoupon\";\r\nimport GetCustomerCoupons from \"../GetCustomerCoupons/GetCustomerCoupons\";\r\nimport GetCustomerCouponsByCategoryId from \"../GetCustomerCouponsByCategory/GetCustomerCouponsByCategory\";\r\nimport GetCustomerCouponsByMaxPrice from \"../GetCustomerCouponsByMaxPrice/GetCustomerCouponsByMaxPrice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport GetCustomerDetails from \"../GetCustomerDetails/GetCustomerDetails\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport GetCustomerCoupon from \"../GetCustomerCoupon/GetCustomerCoupon\";\r\nimport store from \"../../../../Redux/Store\";\r\nimport { setSessionAction } from \"../../../../Redux/SessionState\";\r\nimport Unauthorized from \"../../Unauthorized/Unauthorized\";\r\n\r\nfunction Customer() {\r\n  const [subFormState, setSubFormState] = useState(0);\r\n  let [token, setToken] = useState(store.getState().SessionState.session.token);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setToken(store.getState().SessionState.session.token);\r\n  }, [token]);\r\n\r\n  const actionSelector = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    event.preventDefault();\r\n    setSubFormState(parseInt(event.target.value as string));\r\n  };\r\n\r\n  let subForm: JSX.Element;\r\n  if (!token) {\r\n    return <Unauthorized />;\r\n  }\r\n  switch (subFormState) {\r\n    case 1:\r\n      subForm = <PurchaseCoupon token={token} />;\r\n      break;\r\n    case 2:\r\n      subForm = <GetCustomerCoupon token={token} />;\r\n      break;\r\n    case 3:\r\n      subForm = <GetCustomerCoupons token={token} />;\r\n      break;\r\n    case 4:\r\n      subForm = <GetCustomerCouponsByCategoryId token={token} />;\r\n      break;\r\n    case 5:\r\n      subForm = <GetCustomerCouponsByMaxPrice token={token} />;\r\n      break;\r\n    case 6:\r\n      subForm = <GetCustomerDetails token={token} />;\r\n      break;\r\n    case 7:\r\n      //dispatch(actions.setSession({ token: \"\", userType: -1 }));\r\n      store.dispatch(setSessionAction({ token: \"\", userType: -1 }));\r\n      history.replace(\"/login\");\r\n      break;\r\n    default:\r\n      subForm = <div></div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h2 className=\"CustomerH2\">customer Menu</h2>\r\n      <div className=\"Customer\">\r\n        <Form id=\"actionForm\">\r\n          <div className=\"FormColl\">\r\n            <Form.Group>\r\n              <Form.Label>Choose Action: </Form.Label>\r\n              <Form.Control\r\n                onChange={actionSelector}\r\n                name=\"action\"\r\n                as=\"select\"\r\n                id=\"actionSelect\"\r\n                size=\"lg\"\r\n              >\r\n                <option value=\"\">-- choose one --</option>\r\n                <option value=\"1\"> purchase coupon</option>\r\n                <option value=\"2\"> get customer coupon by ID</option>\r\n                <option value=\"3\"> get customer coupons</option>\r\n                <option value=\"4\"> get customer coupons by category</option>\r\n                <option value=\"5\"> get customer coupons by max price</option>\r\n                <option value=\"6\"> get customer details</option>\r\n                <option value=\"7\"> exit</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n          {/* <MyButton type=\"submit\"> SUBMIT </MyButton> */}\r\n        </Form>\r\n        <div className=\"SubFormCustomer\">{subForm}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Customer;\r\n","import Header from \"./Header/Header\";\r\n//import Side from \"./Side/Side\";\r\nimport \"./Layout.css\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../MainArea/Auth/Login\";\r\nimport Admin from \"../MainArea/AdminArea/Admin/Admin\";\r\nimport Company from \"../MainArea/CompanyArea/Company/Company\";\r\nimport Customer from \"../MainArea/CustomerArea/Cusotmer/Customer\";\r\n\r\nconst Layout = (): JSX.Element => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"Layout\">\r\n        <header>\r\n          <Header />\r\n        </header>\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} exact />\r\n            <Route path=\"/admin\" component={Admin} exact />\r\n            <Route path=\"/company\" component={Company} exact />\r\n            <Route path=\"/customer\" component={Customer} exact />\r\n            <Redirect from=\"/\" to=\"/login\" />\r\n          </Switch>\r\n        </main>\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Layout from \"./Components/LayoutArea/Layout\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Layout />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}